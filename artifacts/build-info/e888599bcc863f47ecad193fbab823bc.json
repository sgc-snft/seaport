{
  "id": "e888599bcc863f47ecad193fbab823bc",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.14",
  "solcLongVersion": "0.8.14+commit.80d49f37",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/conduit/Conduit.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\nimport { ConduitInterface } from \"../interfaces/ConduitInterface.sol\";\n\nimport { ConduitItemType } from \"./lib/ConduitEnums.sol\";\n\nimport { TokenTransferrer } from \"../lib/TokenTransferrer.sol\";\n\n// prettier-ignore\nimport {\n    ConduitTransfer,\n    ConduitBatch1155Transfer\n} from \"./lib/ConduitStructs.sol\";\n\nimport \"./lib/ConduitConstants.sol\";\n\n/**\n * @title Conduit\n * @author 0age\n * @notice This contract serves as an originator for \"proxied\" transfers. Each\n *         conduit is deployed and controlled by a \"conduit controller\" that can\n *         add and remove \"channels\" or contracts that can instruct the conduit\n *         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each\n *         conduit has an owner that can arbitrarily add or remove channels, and\n *         a malicious or negligent owner can add a channel that allows for any\n *         approved ERC20/721/1155 tokens to be taken immediately — be extremely\n *         cautious with what conduits you give token approvals to!*\n */\ncontract Conduit is ConduitInterface, TokenTransferrer {\n    // Set deployer as an immutable controller that can update channel statuses.\n    address private immutable _controller;\n\n    // Track the status of each channel.\n    mapping(address => bool) private _channels;\n\n    /**\n     * @notice Ensure that the caller is currently registered as an open channel\n     *         on the conduit.\n     */\n    modifier onlyOpenChannel() {\n        // Utilize assembly to access channel storage mapping directly.\n        assembly {\n            // Write the caller to scratch space.\n            mstore(ChannelKey_channel_ptr, caller())\n\n            // Write the storage slot for _channels to scratch space.\n            mstore(ChannelKey_slot_ptr, _channels.slot)\n\n            // Derive the position in storage of _channels[msg.sender]\n            // and check if the stored value is zero.\n            if iszero(\n                sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length))\n            ) {\n                // The caller is not an open channel; revert with\n                // ChannelClosed(caller). First, set error signature in memory.\n                mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature)\n\n                // Next, set the caller as the argument.\n                mstore(ChannelClosed_channel_ptr, caller())\n\n                // Finally, revert, returning full custom error with argument.\n                revert(ChannelClosed_error_ptr, ChannelClosed_error_length)\n            }\n        }\n\n        // Continue with function execution.\n        _;\n    }\n\n    /**\n     * @notice In the constructor, set the deployer as the controller.\n     */\n    constructor() {\n        // Set the deployer as the controller.\n        _controller = msg.sender;\n    }\n\n    /**\n     * @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param transfers The ERC20/721/1155 transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function execute(ConduitTransfer[] calldata transfers)\n        external\n        override\n        onlyOpenChannel\n        returns (bytes4 magicValue)\n    {\n        // Retrieve the total number of transfers and place on the stack.\n        uint256 totalStandardTransfers = transfers.length;\n\n        // Iterate over each transfer.\n        for (uint256 i = 0; i < totalStandardTransfers; ) {\n            // Retrieve the transfer in question and perform the transfer.\n            _transfer(transfers[i]);\n\n            // Skip overflow check as for loop is indexed starting at zero.\n            unchecked {\n                ++i;\n            }\n        }\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.execute.selector;\n    }\n\n    /**\n     * @notice Execute a sequence of batch 1155 item transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param batchTransfers The 1155 batch item transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the item transfers were\n     *                    performed successfully.\n     */\n    function executeBatch1155(\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) external override onlyOpenChannel returns (bytes4 magicValue) {\n        // Perform 1155 batch transfers. Note that memory should be considered\n        // entirely corrupted from this point forward.\n        _performERC1155BatchTransfers(batchTransfers);\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.executeBatch1155.selector;\n    }\n\n    /**\n     * @notice Execute a sequence of transfers, both single ERC20/721/1155 item\n     *         transfers as well as batch 1155 item transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param standardTransfers The ERC20/721/1155 item transfers to perform.\n     * @param batchTransfers    The 1155 batch item transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the item transfers were\n     *                    performed successfully.\n     */\n    function executeWithBatch1155(\n        ConduitTransfer[] calldata standardTransfers,\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) external override onlyOpenChannel returns (bytes4 magicValue) {\n        // Retrieve the total number of transfers and place on the stack.\n        uint256 totalStandardTransfers = standardTransfers.length;\n\n        // Iterate over each standard transfer.\n        for (uint256 i = 0; i < totalStandardTransfers; ) {\n            // Retrieve the transfer in question and perform the transfer.\n            _transfer(standardTransfers[i]);\n\n            // Skip overflow check as for loop is indexed starting at zero.\n            unchecked {\n                ++i;\n            }\n        }\n\n        // Perform 1155 batch transfers. Note that memory should be considered\n        // entirely corrupted from this point forward aside from the free memory\n        // pointer having the default value.\n        _performERC1155BatchTransfers(batchTransfers);\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.executeWithBatch1155.selector;\n    }\n\n    /**\n     * @notice Open or close a given channel. Only callable by the controller.\n     *\n     * @param channel The channel to open or close.\n     * @param isOpen  The status of the channel (either open or closed).\n     */\n    function updateChannel(address channel, bool isOpen) external override {\n        // Ensure that the caller is the controller of this contract.\n        if (msg.sender != _controller) {\n            revert InvalidController();\n        }\n\n        // Ensure that the channel does not already have the indicated status.\n        if (_channels[channel] == isOpen) {\n            revert ChannelStatusAlreadySet(channel, isOpen);\n        }\n\n        // Update the status of the channel.\n        _channels[channel] = isOpen;\n\n        // Emit a corresponding event.\n        emit ChannelUpdated(channel, isOpen);\n    }\n\n    /**\n     * @dev Internal function to transfer a given ERC20/721/1155 item. Note that\n     *      channels are expected to implement checks against transferring any\n     *      zero-amount items if that constraint is desired.\n     *\n     * @param item The ERC20/721/1155 item to transfer.\n     */\n    function _transfer(ConduitTransfer calldata item) internal {\n        // Determine the transfer method based on the respective item type.\n        if (item.itemType == ConduitItemType.ERC20) {\n            // Transfer ERC20 token. Note that item.identifier is ignored and\n            // therefore ERC20 transfer items are potentially malleable — this\n            // check should be performed by the calling channel if a constraint\n            // on item malleability is desired.\n            _performERC20Transfer(item.token, item.from, item.to, item.amount);\n        } else if (item.itemType == ConduitItemType.ERC721) {\n            // Ensure that exactly one 721 item is being transferred.\n            if (item.amount != 1) {\n                revert InvalidERC721TransferAmount();\n            }\n\n            // Transfer ERC721 token.\n            _performERC721Transfer(\n                item.token,\n                item.from,\n                item.to,\n                item.identifier\n            );\n        } else if (item.itemType == ConduitItemType.ERC1155) {\n            // Transfer ERC1155 token.\n            _performERC1155Transfer(\n                item.token,\n                item.from,\n                item.to,\n                item.identifier,\n                item.amount\n            );\n        } else {\n            // Throw with an error.\n            revert InvalidItemType();\n        }\n    }\n}\n"
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// prettier-ignore\nimport {\n    ConduitTransfer,\n    ConduitBatch1155Transfer\n} from \"../conduit/lib/ConduitStructs.sol\";\n\n/**\n * @title ConduitInterface\n * @author 0age\n * @notice ConduitInterface contains all external function interfaces, events,\n *         and errors for conduit contracts.\n */\ninterface ConduitInterface {\n    /**\n     * @dev Revert with an error when attempting to execute transfers using a\n     *      caller that does not have an open channel.\n     */\n    error ChannelClosed(address channel);\n\n    /**\n     * @dev Revert with an error when attempting to update a channel to the\n     *      current status of that channel.\n     */\n    error ChannelStatusAlreadySet(address channel, bool isOpen);\n\n    /**\n     * @dev Revert with an error when attempting to execute a transfer for an\n     *      item that does not have an ERC20/721/1155 item type.\n     */\n    error InvalidItemType();\n\n    /**\n     * @dev Revert with an error when attempting to update the status of a\n     *      channel from a caller that is not the conduit controller.\n     */\n    error InvalidController();\n\n    /**\n     * @dev Emit an event whenever a channel is opened or closed.\n     *\n     * @param channel The channel that has been updated.\n     * @param open    A boolean indicating whether the conduit is open or not.\n     */\n    event ChannelUpdated(address indexed channel, bool open);\n\n    /**\n     * @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n     *         with an open channel can call this function.\n     *\n     * @param transfers The ERC20/721/1155 transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function execute(ConduitTransfer[] calldata transfers)\n        external\n        returns (bytes4 magicValue);\n\n    /**\n     * @notice Execute a sequence of batch 1155 transfers. Only a caller with an\n     *         open channel can call this function.\n     *\n     * @param batch1155Transfers The 1155 batch transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function executeBatch1155(\n        ConduitBatch1155Transfer[] calldata batch1155Transfers\n    ) external returns (bytes4 magicValue);\n\n    /**\n     * @notice Execute a sequence of transfers, both single and batch 1155. Only\n     *         a caller with an open channel can call this function.\n     *\n     * @param standardTransfers  The ERC20/721/1155 transfers to perform.\n     * @param batch1155Transfers The 1155 batch transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function executeWithBatch1155(\n        ConduitTransfer[] calldata standardTransfers,\n        ConduitBatch1155Transfer[] calldata batch1155Transfers\n    ) external returns (bytes4 magicValue);\n\n    /**\n     * @notice Open or close a given channel. Only callable by the controller.\n     *\n     * @param channel The channel to open or close.\n     * @param isOpen  The status of the channel (either open or closed).\n     */\n    function updateChannel(address channel, bool isOpen) external;\n}\n"
      },
      "contracts/conduit/lib/ConduitEnums.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\nenum ConduitItemType {\n    NATIVE, // unused\n    ERC20,\n    ERC721,\n    ERC1155\n}\n"
      },
      "contracts/lib/TokenTransferrer.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\nimport \"./TokenTransferrerConstants.sol\";\n\n// prettier-ignore\nimport {\n    TokenTransferrerErrors\n} from \"../interfaces/TokenTransferrerErrors.sol\";\n\nimport { ConduitBatch1155Transfer } from \"../conduit/lib/ConduitStructs.sol\";\n\n/**\n * @title TokenTransferrer\n * @author 0age\n * @custom:coauthor d1ll0n\n * @custom:coauthor transmissions11\n * @notice TokenTransferrer is a library for performing optimized ERC20, ERC721,\n *         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as\n *         by conduits deployed by the ConduitController. Use great caution when\n *         considering these functions for use in other codebases, as there are\n *         significant side effects and edge cases that need to be thoroughly\n *         understood and carefully addressed.\n */\ncontract TokenTransferrer is TokenTransferrerErrors {\n    /**\n     * @dev Internal function to transfer ERC20 tokens from a given originator\n     *      to a given recipient. Sufficient approvals must be set on the\n     *      contract performing the transfer.\n     *\n     * @param token      The ERC20 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param amount     The amount to transfer.\n     */\n    function _performERC20Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        // Utilize assembly to perform an optimized ERC20 token transfer.\n        assembly {\n            // The free memory pointer memory slot will be used when populating\n            // call data for the transfer; read the value and restore it later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n\n            // Write call data into memory, starting with function selector.\n            mstore(ERC20_transferFrom_sig_ptr, ERC20_transferFrom_signature)\n            mstore(ERC20_transferFrom_from_ptr, from)\n            mstore(ERC20_transferFrom_to_ptr, to)\n            mstore(ERC20_transferFrom_amount_ptr, amount)\n\n            // Make call & copy up to 32 bytes of return data to scratch space.\n            // Scratch space does not need to be cleared ahead of time, as the\n            // subsequent check will ensure that either at least a full word of\n            // return data is received (in which case it will be overwritten) or\n            // that no data is received (in which case scratch space will be\n            // ignored) on a successful call to the given token.\n            let callStatus := call(\n                gas(),\n                token,\n                0,\n                ERC20_transferFrom_sig_ptr,\n                ERC20_transferFrom_length,\n                0,\n                OneWord\n            )\n\n            // Determine whether transfer was successful using status & result.\n            let success := and(\n                // Set success to whether the call reverted, if not check it\n                // either returned exactly 1 (can't just be non-zero data), or\n                // had no return data.\n                or(\n                    and(eq(mload(0), 1), gt(returndatasize(), 31)),\n                    iszero(returndatasize())\n                ),\n                callStatus\n            )\n\n            // Handle cases where either the transfer failed or no data was\n            // returned. Group these, as most transfers will succeed with data.\n            // Equivalent to `or(iszero(success), iszero(returndatasize()))`\n            // but after it's inverted for JUMPI this expression is cheaper.\n            if iszero(and(success, iszero(iszero(returndatasize())))) {\n                // If the token has no code or the transfer failed: Equivalent\n                // to `or(iszero(success), iszero(extcodesize(token)))` but\n                // after it's inverted for JUMPI this expression is cheaper.\n                if iszero(and(iszero(iszero(extcodesize(token))), success)) {\n                    // If the transfer failed:\n                    if iszero(success) {\n                        // If it was due to a revert:\n                        if iszero(callStatus) {\n                            // If it returned a message, bubble it up as long as\n                            // sufficient gas remains to do so:\n                            if returndatasize() {\n                                // Ensure that sufficient gas is available to\n                                // copy returndata while expanding memory where\n                                // necessary. Start by computing the word size\n                                // of returndata and allocated memory. Round up\n                                // to the nearest full word.\n                                let returnDataWords := div(\n                                    add(returndatasize(), AlmostOneWord),\n                                    OneWord\n                                )\n\n                                // Note: use the free memory pointer in place of\n                                // msize() to work around a Yul warning that\n                                // prevents accessing msize directly when the IR\n                                // pipeline is activated.\n                                let msizeWords := div(memPointer, OneWord)\n\n                                // Next, compute the cost of the returndatacopy.\n                                let cost := mul(CostPerWord, returnDataWords)\n\n                                // Then, compute cost of new memory allocation.\n                                if gt(returnDataWords, msizeWords) {\n                                    cost := add(\n                                        cost,\n                                        add(\n                                            mul(\n                                                sub(\n                                                    returnDataWords,\n                                                    msizeWords\n                                                ),\n                                                CostPerWord\n                                            ),\n                                            div(\n                                                sub(\n                                                    mul(\n                                                        returnDataWords,\n                                                        returnDataWords\n                                                    ),\n                                                    mul(msizeWords, msizeWords)\n                                                ),\n                                                MemoryExpansionCoefficient\n                                            )\n                                        )\n                                    )\n                                }\n\n                                // Finally, add a small constant and compare to\n                                // gas remaining; bubble up the revert data if\n                                // enough gas is still available.\n                                if lt(add(cost, ExtraGasBuffer), gas()) {\n                                    // Copy returndata to memory; overwrite\n                                    // existing memory.\n                                    returndatacopy(0, 0, returndatasize())\n\n                                    // Revert, specifying memory region with\n                                    // copied returndata.\n                                    revert(0, returndatasize())\n                                }\n                            }\n\n                            // Otherwise revert with a generic error message.\n                            mstore(\n                                TokenTransferGenericFailure_error_sig_ptr,\n                                TokenTransferGenericFailure_error_signature\n                            )\n                            mstore(\n                                TokenTransferGenericFailure_error_token_ptr,\n                                token\n                            )\n                            mstore(\n                                TokenTransferGenericFailure_error_from_ptr,\n                                from\n                            )\n                            mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                            mstore(TokenTransferGenericFailure_error_id_ptr, 0)\n                            mstore(\n                                TokenTransferGenericFailure_error_amount_ptr,\n                                amount\n                            )\n                            revert(\n                                TokenTransferGenericFailure_error_sig_ptr,\n                                TokenTransferGenericFailure_error_length\n                            )\n                        }\n\n                        // Otherwise revert with a message about the token\n                        // returning false or non-compliant return values.\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_sig_ptr,\n                            BadReturnValueFromERC20OnTransfer_error_signature\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_token_ptr,\n                            token\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_from_ptr,\n                            from\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_to_ptr,\n                            to\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_amount_ptr,\n                            amount\n                        )\n                        revert(\n                            BadReturnValueFromERC20OnTransfer_error_sig_ptr,\n                            BadReturnValueFromERC20OnTransfer_error_length\n                        )\n                    }\n\n                    // Otherwise, revert with error about token not having code:\n                    mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                    mstore(NoContract_error_token_ptr, token)\n                    revert(NoContract_error_sig_ptr, NoContract_error_length)\n                }\n\n                // Otherwise, the token just returned no data despite the call\n                // having succeeded; no need to optimize for this as it's not\n                // technically ERC20 compliant.\n            }\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer an ERC721 token from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer. Note that this function does\n     *      not check whether the receiver can accept the ERC721 token (i.e. it\n     *      does not use `safeTransferFrom`).\n     *\n     * @param token      The ERC721 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param identifier The tokenId to transfer.\n     */\n    function _performERC721Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 identifier\n    ) internal {\n        // Utilize assembly to perform an optimized ERC721 token transfer.\n        assembly {\n            // If the token has no code, revert.\n            if iszero(extcodesize(token)) {\n                mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                mstore(NoContract_error_token_ptr, token)\n                revert(NoContract_error_sig_ptr, NoContract_error_length)\n            }\n\n            // The free memory pointer memory slot will be used when populating\n            // call data for the transfer; read the value and restore it later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n\n            // Write call data to memory starting with function selector.\n            mstore(ERC721_transferFrom_sig_ptr, ERC721_transferFrom_signature)\n            mstore(ERC721_transferFrom_from_ptr, from)\n            mstore(ERC721_transferFrom_to_ptr, to)\n            mstore(ERC721_transferFrom_id_ptr, identifier)\n\n            // Perform the call, ignoring return data.\n            let success := call(\n                gas(),\n                token,\n                0,\n                ERC721_transferFrom_sig_ptr,\n                ERC721_transferFrom_length,\n                0,\n                0\n            )\n\n            // If the transfer reverted:\n            if iszero(success) {\n                // If it returned a message, bubble it up as long as sufficient\n                // gas remains to do so:\n                if returndatasize() {\n                    // Ensure that sufficient gas is available to copy\n                    // returndata while expanding memory where necessary. Start\n                    // by computing word size of returndata & allocated memory.\n                    // Round up to the nearest full word.\n                    let returnDataWords := div(\n                        add(returndatasize(), AlmostOneWord),\n                        OneWord\n                    )\n\n                    // Note: use the free memory pointer in place of msize() to\n                    // work around a Yul warning that prevents accessing msize\n                    // directly when the IR pipeline is activated.\n                    let msizeWords := div(memPointer, OneWord)\n\n                    // Next, compute the cost of the returndatacopy.\n                    let cost := mul(CostPerWord, returnDataWords)\n\n                    // Then, compute cost of new memory allocation.\n                    if gt(returnDataWords, msizeWords) {\n                        cost := add(\n                            cost,\n                            add(\n                                mul(\n                                    sub(returnDataWords, msizeWords),\n                                    CostPerWord\n                                ),\n                                div(\n                                    sub(\n                                        mul(returnDataWords, returnDataWords),\n                                        mul(msizeWords, msizeWords)\n                                    ),\n                                    MemoryExpansionCoefficient\n                                )\n                            )\n                        )\n                    }\n\n                    // Finally, add a small constant and compare to gas\n                    // remaining; bubble up the revert data if enough gas is\n                    // still available.\n                    if lt(add(cost, ExtraGasBuffer), gas()) {\n                        // Copy returndata to memory; overwrite existing memory.\n                        returndatacopy(0, 0, returndatasize())\n\n                        // Revert, giving memory region with copied returndata.\n                        revert(0, returndatasize())\n                    }\n                }\n\n                // Otherwise revert with a generic error message.\n                mstore(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_signature\n                )\n                mstore(TokenTransferGenericFailure_error_token_ptr, token)\n                mstore(TokenTransferGenericFailure_error_from_ptr, from)\n                mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                mstore(TokenTransferGenericFailure_error_id_ptr, identifier)\n                mstore(TokenTransferGenericFailure_error_amount_ptr, 1)\n                revert(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_length\n                )\n            }\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer ERC1155 tokens from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer and contract recipients must\n     *      implement the ERC1155TokenReceiver interface to indicate that they\n     *      are willing to accept the transfer.\n     *\n     * @param token      The ERC1155 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param identifier The id to transfer.\n     * @param amount     The amount to transfer.\n     */\n    function _performERC1155Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 identifier,\n        uint256 amount\n    ) internal {\n        // Utilize assembly to perform an optimized ERC1155 token transfer.\n        assembly {\n            // If the token has no code, revert.\n            if iszero(extcodesize(token)) {\n                mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                mstore(NoContract_error_token_ptr, token)\n                revert(NoContract_error_sig_ptr, NoContract_error_length)\n            }\n\n            // The following memory slots will be used when populating call data\n            // for the transfer; read the values and restore them later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n            let slot0x80 := mload(Slot0x80)\n            let slot0xA0 := mload(Slot0xA0)\n            let slot0xC0 := mload(Slot0xC0)\n\n            // Write call data into memory, beginning with function selector.\n            mstore(\n                ERC1155_safeTransferFrom_sig_ptr,\n                ERC1155_safeTransferFrom_signature\n            )\n            mstore(ERC1155_safeTransferFrom_from_ptr, from)\n            mstore(ERC1155_safeTransferFrom_to_ptr, to)\n            mstore(ERC1155_safeTransferFrom_id_ptr, identifier)\n            mstore(ERC1155_safeTransferFrom_amount_ptr, amount)\n            mstore(\n                ERC1155_safeTransferFrom_data_offset_ptr,\n                ERC1155_safeTransferFrom_data_length_offset\n            )\n            mstore(ERC1155_safeTransferFrom_data_length_ptr, 0)\n\n            // Perform the call, ignoring return data.\n            let success := call(\n                gas(),\n                token,\n                0,\n                ERC1155_safeTransferFrom_sig_ptr,\n                ERC1155_safeTransferFrom_length,\n                0,\n                0\n            )\n\n            // If the transfer reverted:\n            if iszero(success) {\n                // If it returned a message, bubble it up as long as sufficient\n                // gas remains to do so:\n                if returndatasize() {\n                    // Ensure that sufficient gas is available to copy\n                    // returndata while expanding memory where necessary. Start\n                    // by computing word size of returndata & allocated memory.\n                    // Round up to the nearest full word.\n                    let returnDataWords := div(\n                        add(returndatasize(), AlmostOneWord),\n                        OneWord\n                    )\n\n                    // Note: use the free memory pointer in place of msize() to\n                    // work around a Yul warning that prevents accessing msize\n                    // directly when the IR pipeline is activated.\n                    let msizeWords := div(memPointer, OneWord)\n\n                    // Next, compute the cost of the returndatacopy.\n                    let cost := mul(CostPerWord, returnDataWords)\n\n                    // Then, compute cost of new memory allocation.\n                    if gt(returnDataWords, msizeWords) {\n                        cost := add(\n                            cost,\n                            add(\n                                mul(\n                                    sub(returnDataWords, msizeWords),\n                                    CostPerWord\n                                ),\n                                div(\n                                    sub(\n                                        mul(returnDataWords, returnDataWords),\n                                        mul(msizeWords, msizeWords)\n                                    ),\n                                    MemoryExpansionCoefficient\n                                )\n                            )\n                        )\n                    }\n\n                    // Finally, add a small constant and compare to gas\n                    // remaining; bubble up the revert data if enough gas is\n                    // still available.\n                    if lt(add(cost, ExtraGasBuffer), gas()) {\n                        // Copy returndata to memory; overwrite existing memory.\n                        returndatacopy(0, 0, returndatasize())\n\n                        // Revert, giving memory region with copied returndata.\n                        revert(0, returndatasize())\n                    }\n                }\n\n                // Otherwise revert with a generic error message.\n                mstore(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_signature\n                )\n                mstore(TokenTransferGenericFailure_error_token_ptr, token)\n                mstore(TokenTransferGenericFailure_error_from_ptr, from)\n                mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                mstore(TokenTransferGenericFailure_error_id_ptr, identifier)\n                mstore(TokenTransferGenericFailure_error_amount_ptr, amount)\n                revert(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_length\n                )\n            }\n\n            mstore(Slot0x80, slot0x80) // Restore slot 0x80.\n            mstore(Slot0xA0, slot0xA0) // Restore slot 0xA0.\n            mstore(Slot0xC0, slot0xC0) // Restore slot 0xC0.\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer ERC1155 tokens from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer and contract recipients must\n     *      implement the ERC1155TokenReceiver interface to indicate that they\n     *      are willing to accept the transfer. NOTE: this function is not\n     *      memory-safe; it will overwrite existing memory, restore the free\n     *      memory pointer to the default value, and overwrite the zero slot.\n     *      This function should only be called once memory is no longer\n     *      required and when uninitialized arrays are not utilized, and memory\n     *      should be considered fully corrupted (aside from the existence of a\n     *      default-value free memory pointer) after calling this function.\n     *\n     * @param batchTransfers The group of 1155 batch transfers to perform.\n     */\n    function _performERC1155BatchTransfers(\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) internal {\n        // Utilize assembly to perform optimized batch 1155 transfers.\n        assembly {\n            let len := batchTransfers.length\n            // Pointer to first head in the array, which is offset to the struct\n            // at each index. This gets incremented after each loop to avoid\n            // multiplying by 32 to get the offset for each element.\n            let nextElementHeadPtr := batchTransfers.offset\n\n            // Pointer to beginning of the head of the array. This is the\n            // reference position each offset references. It's held static to\n            // let each loop calculate the data position for an element.\n            let arrayHeadPtr := nextElementHeadPtr\n\n            // Write the function selector, which will be reused for each call:\n            // safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\n            mstore(\n                ConduitBatch1155Transfer_from_offset,\n                ERC1155_safeBatchTransferFrom_signature\n            )\n\n            // Iterate over each batch transfer.\n            for {\n                let i := 0\n            } lt(i, len) {\n                i := add(i, 1)\n            } {\n                // Read the offset to the beginning of the element and add\n                // it to pointer to the beginning of the array head to get\n                // the absolute position of the element in calldata.\n                let elementPtr := add(\n                    arrayHeadPtr,\n                    calldataload(nextElementHeadPtr)\n                )\n\n                // Retrieve the token from calldata.\n                let token := calldataload(elementPtr)\n\n                // If the token has no code, revert.\n                if iszero(extcodesize(token)) {\n                    mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                    mstore(NoContract_error_token_ptr, token)\n                    revert(NoContract_error_sig_ptr, NoContract_error_length)\n                }\n\n                // Get the total number of supplied ids.\n                let idsLength := calldataload(\n                    add(elementPtr, ConduitBatch1155Transfer_ids_length_offset)\n                )\n\n                // Determine the expected offset for the amounts array.\n                let expectedAmountsOffset := add(\n                    ConduitBatch1155Transfer_amounts_length_baseOffset,\n                    mul(idsLength, OneWord)\n                )\n\n                // Validate struct encoding.\n                let invalidEncoding := iszero(\n                    and(\n                        // ids.length == amounts.length\n                        eq(\n                            idsLength,\n                            calldataload(add(elementPtr, expectedAmountsOffset))\n                        ),\n                        and(\n                            // ids_offset == 0xa0\n                            eq(\n                                calldataload(\n                                    add(\n                                        elementPtr,\n                                        ConduitBatch1155Transfer_ids_head_offset\n                                    )\n                                ),\n                                ConduitBatch1155Transfer_ids_length_offset\n                            ),\n                            // amounts_offset == 0xc0 + ids.length*32\n                            eq(\n                                calldataload(\n                                    add(\n                                        elementPtr,\n                                        ConduitBatchTransfer_amounts_head_offset\n                                    )\n                                ),\n                                expectedAmountsOffset\n                            )\n                        )\n                    )\n                )\n\n                // Revert with an error if the encoding is not valid.\n                if invalidEncoding {\n                    mstore(\n                        Invalid1155BatchTransferEncoding_ptr,\n                        Invalid1155BatchTransferEncoding_selector\n                    )\n                    revert(\n                        Invalid1155BatchTransferEncoding_ptr,\n                        Invalid1155BatchTransferEncoding_length\n                    )\n                }\n\n                // Update the offset position for the next loop\n                nextElementHeadPtr := add(nextElementHeadPtr, OneWord)\n\n                // Copy the first section of calldata (before dynamic values).\n                calldatacopy(\n                    BatchTransfer1155Params_ptr,\n                    add(elementPtr, ConduitBatch1155Transfer_from_offset),\n                    ConduitBatch1155Transfer_usable_head_size\n                )\n\n                // Determine size of calldata required for ids and amounts. Note\n                // that the size includes both lengths as well as the data.\n                let idsAndAmountsSize := add(TwoWords, mul(idsLength, TwoWords))\n\n                // Update the offset for the data array in memory.\n                mstore(\n                    BatchTransfer1155Params_data_head_ptr,\n                    add(\n                        BatchTransfer1155Params_ids_length_offset,\n                        idsAndAmountsSize\n                    )\n                )\n\n                // Set the length of the data array in memory to zero.\n                mstore(\n                    add(\n                        BatchTransfer1155Params_data_length_basePtr,\n                        idsAndAmountsSize\n                    ),\n                    0\n                )\n\n                // Determine the total calldata size for the call to transfer.\n                let transferDataSize := add(\n                    BatchTransfer1155Params_calldata_baseSize,\n                    idsAndAmountsSize\n                )\n\n                // Copy second section of calldata (including dynamic values).\n                calldatacopy(\n                    BatchTransfer1155Params_ids_length_ptr,\n                    add(elementPtr, ConduitBatch1155Transfer_ids_length_offset),\n                    idsAndAmountsSize\n                )\n\n                // Perform the call to transfer 1155 tokens.\n                let success := call(\n                    gas(),\n                    token,\n                    0,\n                    ConduitBatch1155Transfer_from_offset, // Data portion start.\n                    transferDataSize, // Location of the length of callData.\n                    0,\n                    0\n                )\n\n                // If the transfer reverted:\n                if iszero(success) {\n                    // If it returned a message, bubble it up as long as\n                    // sufficient gas remains to do so:\n                    if returndatasize() {\n                        // Ensure that sufficient gas is available to copy\n                        // returndata while expanding memory where necessary.\n                        // Start by computing word size of returndata and\n                        // allocated memory. Round up to the nearest full word.\n                        let returnDataWords := div(\n                            add(returndatasize(), AlmostOneWord),\n                            OneWord\n                        )\n\n                        // Note: use transferDataSize in place of msize() to\n                        // work around a Yul warning that prevents accessing\n                        // msize directly when the IR pipeline is activated.\n                        // The free memory pointer is not used here because\n                        // this function does almost all memory management\n                        // manually and does not update it, and transferDataSize\n                        // should be the largest memory value used (unless a\n                        // previous batch was larger).\n                        let msizeWords := div(transferDataSize, OneWord)\n\n                        // Next, compute the cost of the returndatacopy.\n                        let cost := mul(CostPerWord, returnDataWords)\n\n                        // Then, compute cost of new memory allocation.\n                        if gt(returnDataWords, msizeWords) {\n                            cost := add(\n                                cost,\n                                add(\n                                    mul(\n                                        sub(returnDataWords, msizeWords),\n                                        CostPerWord\n                                    ),\n                                    div(\n                                        sub(\n                                            mul(\n                                                returnDataWords,\n                                                returnDataWords\n                                            ),\n                                            mul(msizeWords, msizeWords)\n                                        ),\n                                        MemoryExpansionCoefficient\n                                    )\n                                )\n                            )\n                        }\n\n                        // Finally, add a small constant and compare to gas\n                        // remaining; bubble up the revert data if enough gas is\n                        // still available.\n                        if lt(add(cost, ExtraGasBuffer), gas()) {\n                            // Copy returndata to memory; overwrite existing.\n                            returndatacopy(0, 0, returndatasize())\n\n                            // Revert with memory region containing returndata.\n                            revert(0, returndatasize())\n                        }\n                    }\n\n                    // Set the error signature.\n                    mstore(\n                        0,\n                        ERC1155BatchTransferGenericFailure_error_signature\n                    )\n\n                    // Write the token.\n                    mstore(ERC1155BatchTransferGenericFailure_token_ptr, token)\n\n                    // Increase the offset to ids by 32.\n                    mstore(\n                        BatchTransfer1155Params_ids_head_ptr,\n                        ERC1155BatchTransferGenericFailure_ids_offset\n                    )\n\n                    // Increase the offset to amounts by 32.\n                    mstore(\n                        BatchTransfer1155Params_amounts_head_ptr,\n                        add(\n                            OneWord,\n                            mload(BatchTransfer1155Params_amounts_head_ptr)\n                        )\n                    )\n\n                    // Return modified region. The total size stays the same as\n                    // `token` uses the same number of bytes as `data.length`.\n                    revert(0, transferDataSize)\n                }\n            }\n\n            // Reset the free memory pointer to the default value; memory must\n            // be assumed to be dirtied and not reused from this point forward.\n            // Also note that the zero slot is not reset to zero, meaning empty\n            // arrays cannot be safely created or utilized until it is restored.\n            mstore(FreeMemoryPointerSlot, DefaultFreeMemoryPointer)\n        }\n    }\n}\n"
      },
      "contracts/conduit/lib/ConduitStructs.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\nimport { ConduitItemType } from \"./ConduitEnums.sol\";\n\nstruct ConduitTransfer {\n    ConduitItemType itemType;\n    address token;\n    address from;\n    address to;\n    uint256 identifier;\n    uint256 amount;\n}\n\nstruct ConduitBatch1155Transfer {\n    address token;\n    address from;\n    address to;\n    uint256[] ids;\n    uint256[] amounts;\n}\n"
      },
      "contracts/conduit/lib/ConduitConstants.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// error ChannelClosed(address channel)\nuint256 constant ChannelClosed_error_signature = (\n    0x93daadf200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ChannelClosed_error_ptr = 0x00;\nuint256 constant ChannelClosed_channel_ptr = 0x4;\nuint256 constant ChannelClosed_error_length = 0x24;\n\n// For the mapping:\n// mapping(address => bool) channels\n// The position in storage for a particular account is:\n// keccak256(abi.encode(account, channels.slot))\nuint256 constant ChannelKey_channel_ptr = 0x00;\nuint256 constant ChannelKey_slot_ptr = 0x20;\nuint256 constant ChannelKey_length = 0x40;\n"
      },
      "contracts/lib/TokenTransferrerConstants.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n/*\n * -------------------------- Disambiguation & Other Notes ---------------------\n *    - The term \"head\" is used as it is in the documentation for ABI encoding,\n *      but only in reference to dynamic types, i.e. it always refers to the\n *      offset or pointer to the body of a dynamic type. In calldata, the head\n *      is always an offset (relative to the parent object), while in memory,\n *      the head is always the pointer to the body. More information found here:\n *      https://docs.soliditylang.org/en/v0.8.14/abi-spec.html#argument-encoding\n *        - Note that the length of an array is separate from and precedes the\n *          head of the array.\n *\n *    - The term \"body\" is used in place of the term \"head\" used in the ABI\n *      documentation. It refers to the start of the data for a dynamic type,\n *      e.g. the first word of a struct or the first word of the first element\n *      in an array.\n *\n *    - The term \"pointer\" is used to describe the absolute position of a value\n *      and never an offset relative to another value.\n *        - The suffix \"_ptr\" refers to a memory pointer.\n *        - The suffix \"_cdPtr\" refers to a calldata pointer.\n *\n *    - The term \"offset\" is used to describe the position of a value relative\n *      to some parent value. For example, OrderParameters_conduit_offset is the\n *      offset to the \"conduit\" value in the OrderParameters struct relative to\n *      the start of the body.\n *        - Note: Offsets are used to derive pointers.\n *\n *    - Some structs have pointers defined for all of their fields in this file.\n *      Lines which are commented out are fields that are not used in the\n *      codebase but have been left in for readability.\n */\n\nuint256 constant AlmostOneWord = 0x1f;\nuint256 constant OneWord = 0x20;\nuint256 constant TwoWords = 0x40;\nuint256 constant ThreeWords = 0x60;\n\nuint256 constant FreeMemoryPointerSlot = 0x40;\nuint256 constant ZeroSlot = 0x60;\nuint256 constant DefaultFreeMemoryPointer = 0x80;\n\nuint256 constant Slot0x80 = 0x80;\nuint256 constant Slot0xA0 = 0xa0;\nuint256 constant Slot0xC0 = 0xc0;\n\n// abi.encodeWithSignature(\"transferFrom(address,address,uint256)\")\nuint256 constant ERC20_transferFrom_signature = (\n    0x23b872dd00000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC20_transferFrom_sig_ptr = 0x0;\nuint256 constant ERC20_transferFrom_from_ptr = 0x04;\nuint256 constant ERC20_transferFrom_to_ptr = 0x24;\nuint256 constant ERC20_transferFrom_amount_ptr = 0x44;\nuint256 constant ERC20_transferFrom_length = 0x64; // 4 + 32 * 3 == 100\n\n// abi.encodeWithSignature(\n//     \"safeTransferFrom(address,address,uint256,uint256,bytes)\"\n// )\nuint256 constant ERC1155_safeTransferFrom_signature = (\n    0xf242432a00000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC1155_safeTransferFrom_sig_ptr = 0x0;\nuint256 constant ERC1155_safeTransferFrom_from_ptr = 0x04;\nuint256 constant ERC1155_safeTransferFrom_to_ptr = 0x24;\nuint256 constant ERC1155_safeTransferFrom_id_ptr = 0x44;\nuint256 constant ERC1155_safeTransferFrom_amount_ptr = 0x64;\nuint256 constant ERC1155_safeTransferFrom_data_offset_ptr = 0x84;\nuint256 constant ERC1155_safeTransferFrom_data_length_ptr = 0xa4;\nuint256 constant ERC1155_safeTransferFrom_length = 0xc4; // 4 + 32 * 6 == 196\nuint256 constant ERC1155_safeTransferFrom_data_length_offset = 0xa0;\n\n// abi.encodeWithSignature(\n//     \"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\"\n// )\nuint256 constant ERC1155_safeBatchTransferFrom_signature = (\n    0x2eb2c2d600000000000000000000000000000000000000000000000000000000\n);\n\nbytes4 constant ERC1155_safeBatchTransferFrom_selector = bytes4(\n    bytes32(ERC1155_safeBatchTransferFrom_signature)\n);\n\nuint256 constant ERC721_transferFrom_signature = ERC20_transferFrom_signature;\nuint256 constant ERC721_transferFrom_sig_ptr = 0x0;\nuint256 constant ERC721_transferFrom_from_ptr = 0x04;\nuint256 constant ERC721_transferFrom_to_ptr = 0x24;\nuint256 constant ERC721_transferFrom_id_ptr = 0x44;\nuint256 constant ERC721_transferFrom_length = 0x64; // 4 + 32 * 3 == 100\n\n// abi.encodeWithSignature(\"NoContract(address)\")\nuint256 constant NoContract_error_signature = (\n    0x5f15d67200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant NoContract_error_sig_ptr = 0x0;\nuint256 constant NoContract_error_token_ptr = 0x4;\nuint256 constant NoContract_error_length = 0x24; // 4 + 32 == 36\n\n// abi.encodeWithSignature(\n//     \"TokenTransferGenericFailure(address,address,address,uint256,uint256)\"\n// )\nuint256 constant TokenTransferGenericFailure_error_signature = (\n    0xf486bc8700000000000000000000000000000000000000000000000000000000\n);\nuint256 constant TokenTransferGenericFailure_error_sig_ptr = 0x0;\nuint256 constant TokenTransferGenericFailure_error_token_ptr = 0x4;\nuint256 constant TokenTransferGenericFailure_error_from_ptr = 0x24;\nuint256 constant TokenTransferGenericFailure_error_to_ptr = 0x44;\nuint256 constant TokenTransferGenericFailure_error_id_ptr = 0x64;\nuint256 constant TokenTransferGenericFailure_error_amount_ptr = 0x84;\n\n// 4 + 32 * 5 == 164\nuint256 constant TokenTransferGenericFailure_error_length = 0xa4;\n\n// abi.encodeWithSignature(\n//     \"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\"\n// )\nuint256 constant BadReturnValueFromERC20OnTransfer_error_signature = (\n    0x9889192300000000000000000000000000000000000000000000000000000000\n);\nuint256 constant BadReturnValueFromERC20OnTransfer_error_sig_ptr = 0x0;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_token_ptr = 0x4;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_from_ptr = 0x24;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_to_ptr = 0x44;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_amount_ptr = 0x64;\n\n// 4 + 32 * 4 == 132\nuint256 constant BadReturnValueFromERC20OnTransfer_error_length = 0x84;\n\nuint256 constant ExtraGasBuffer = 0x20;\nuint256 constant CostPerWord = 3;\nuint256 constant MemoryExpansionCoefficient = 0x200;\n\n// Values are offset by 32 bytes in order to write the token to the beginning\n// in the event of a revert\nuint256 constant BatchTransfer1155Params_ptr = 0x24;\nuint256 constant BatchTransfer1155Params_ids_head_ptr = 0x64;\nuint256 constant BatchTransfer1155Params_amounts_head_ptr = 0x84;\nuint256 constant BatchTransfer1155Params_data_head_ptr = 0xa4;\nuint256 constant BatchTransfer1155Params_data_length_basePtr = 0xc4;\nuint256 constant BatchTransfer1155Params_calldata_baseSize = 0xc4;\n\nuint256 constant BatchTransfer1155Params_ids_length_ptr = 0xc4;\n\nuint256 constant BatchTransfer1155Params_ids_length_offset = 0xa0;\nuint256 constant BatchTransfer1155Params_amounts_length_baseOffset = 0xc0;\nuint256 constant BatchTransfer1155Params_data_length_baseOffset = 0xe0;\n\nuint256 constant ConduitBatch1155Transfer_usable_head_size = 0x80;\n\nuint256 constant ConduitBatch1155Transfer_from_offset = 0x20;\nuint256 constant ConduitBatch1155Transfer_ids_head_offset = 0x60;\nuint256 constant ConduitBatch1155Transfer_amounts_head_offset = 0x80;\nuint256 constant ConduitBatch1155Transfer_ids_length_offset = 0xa0;\nuint256 constant ConduitBatch1155Transfer_amounts_length_baseOffset = 0xc0;\nuint256 constant ConduitBatch1155Transfer_calldata_baseSize = 0xc0;\n\n// Note: abbreviated version of above constant to adhere to line length limit.\nuint256 constant ConduitBatchTransfer_amounts_head_offset = 0x80;\n\nuint256 constant Invalid1155BatchTransferEncoding_ptr = 0x00;\nuint256 constant Invalid1155BatchTransferEncoding_length = 0x04;\nuint256 constant Invalid1155BatchTransferEncoding_selector = (\n    0xeba2084c00000000000000000000000000000000000000000000000000000000\n);\n\nuint256 constant ERC1155BatchTransferGenericFailure_error_signature = (\n    0xafc445e200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC1155BatchTransferGenericFailure_token_ptr = 0x04;\nuint256 constant ERC1155BatchTransferGenericFailure_ids_offset = 0xc0;\n"
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n/**\n * @title TokenTransferrerErrors\n */\ninterface TokenTransferrerErrors {\n    /**\n     * @dev Revert with an error when an ERC721 transfer with amount other than\n     *      one is attempted.\n     */\n    error InvalidERC721TransferAmount();\n\n    /**\n     * @dev Revert with an error when attempting to fulfill an order where an\n     *      item has an amount of zero.\n     */\n    error MissingItemAmount();\n\n    /**\n     * @dev Revert with an error when attempting to fulfill an order where an\n     *      item has unused parameters. This includes both the token and the\n     *      identifier parameters for native transfers as well as the identifier\n     *      parameter for ERC20 transfers. Note that the conduit does not\n     *      perform this check, leaving it up to the calling channel to enforce\n     *      when desired.\n     */\n    error UnusedItemParameters();\n\n    /**\n     * @dev Revert with an error when an ERC20, ERC721, or ERC1155 token\n     *      transfer reverts.\n     *\n     * @param token      The token for which the transfer was attempted.\n     * @param from       The source of the attempted transfer.\n     * @param to         The recipient of the attempted transfer.\n     * @param identifier The identifier for the attempted transfer.\n     * @param amount     The amount for the attempted transfer.\n     */\n    error TokenTransferGenericFailure(\n        address token,\n        address from,\n        address to,\n        uint256 identifier,\n        uint256 amount\n    );\n\n    /**\n     * @dev Revert with an error when a batch ERC1155 token transfer reverts.\n     *\n     * @param token       The token for which the transfer was attempted.\n     * @param from        The source of the attempted transfer.\n     * @param to          The recipient of the attempted transfer.\n     * @param identifiers The identifiers for the attempted transfer.\n     * @param amounts     The amounts for the attempted transfer.\n     */\n    error ERC1155BatchTransferGenericFailure(\n        address token,\n        address from,\n        address to,\n        uint256[] identifiers,\n        uint256[] amounts\n    );\n\n    /**\n     * @dev Revert with an error when an ERC20 token transfer returns a falsey\n     *      value.\n     *\n     * @param token      The token for which the ERC20 transfer was attempted.\n     * @param from       The source of the attempted ERC20 transfer.\n     * @param to         The recipient of the attempted ERC20 transfer.\n     * @param amount     The amount for the attempted ERC20 transfer.\n     */\n    error BadReturnValueFromERC20OnTransfer(\n        address token,\n        address from,\n        address to,\n        uint256 amount\n    );\n\n    /**\n     * @dev Revert with an error when an account being called as an assumed\n     *      contract does not have code and returns no data.\n     *\n     * @param account The account that should contain code.\n     */\n    error NoContract(address account);\n\n    /**\n     * @dev Revert with an error when attempting to execute an 1155 batch\n     *      transfer using calldata not produced by default ABI encoding or with\n     *      different lengths for ids and amounts arrays.\n     */\n    error Invalid1155BatchTransferEncoding();\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/conduit/Conduit.sol": {
        "Conduit": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                }
              ],
              "name": "ChannelClosed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "ChannelStatusAlreadySet",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Invalid1155BatchTransferEncoding",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidController",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidItemType",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UnusedItemParameters",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                }
              ],
              "name": "ChannelUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batchTransfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "standardTransfers",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batchTransfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeWithBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "updateChannel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a080604052346100235733608052610c7690816100298239608051816103c50152f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610362565b5061000e61027f565b5061000e6101ab565b346101465760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101465760043567ffffffffffffffff8111610142576100b5903690600401610149565b9133815280602052604081205415610116575b8281106100fa576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011061010b6001938686610532565b6105c4565b016100c8565b807f93daadf2000000000000000000000000000000000000000000000000000000006024925233600452fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576101fc903690600401610149565b9160243590811161000e5761021590369060040161017a565b919092600033815280602052604081205415610116575b8181106102685761023d8486610acb565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b8061027961010b6001938587610532565b0161022c565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576102cf90369060040161017a565b33600052600060205260406000205415610316576102ec91610acb565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b7f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043561039e81610344565b6024359081151580830361000e5773ffffffffffffffffffffffffffffffffffffffff90817f00000000000000000000000000000000000000000000000000000000000000001633036105085761041f6104188473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5460ff1690565b1515146104b657816104a6846104767fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60405193151584521691602090a2005b506040517f924e341e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9190911660048201529015156024820152604490fd5b60046040517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156105425760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6004111561057b57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105c181610344565b90565b60016105cf826105aa565b6105d881610571565b0361061357806105ed602061061193016105b7565b906105fa604082016105b7565b60a0610608606084016105b7565b92013592610712565b565b600261061e826105aa565b61062781610571565b0361069657600160a08201350361066c5780610648602061061193016105b7565b90610655604082016105b7565b6080610663606084016105b7565b92013592610882565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b60036106a1826105aa565b6106aa81610571565b036106e857806106bf602061061193016105b7565b6106cb604083016105b7565b6106d7606084016105b7565b90608060a085013594013592610990565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d151581161561077c575b505050505050604052606052565b80863b15151661076e579087959691156107bc57602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b156107f657506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d610835575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b601f3d0160051c9060051c908060030291808211610869575b505060205a91011061086057856107fc565b833d81803e3d90fd5b8080600392028380020360091c9203020101868061084e565b9092813b1561096257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af1156108db5750505050604052606052565b8593943d61091e575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b601f3d0160051c9060051c908060030291808211610949575b505060205a91011061086057856108e4565b8080600392028380020360091c92030201018680610937565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b15610a9d57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af115610a0d57505050505060805260a05260c052604052606052565b89949550883d610a50575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b601f3d0160051c9060051c908060030291808211610a84575b505060205a910110610a7b5786610a18565b843d81803e3d90fd5b8080600392028380020360091c92030201018780610a69565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b90816020907f2eb2c2d600000000000000000000000000000000000000000000000000000000825260005b838110610b095750505050506080604052565b8435820194853590813b156109625760a09182880192833560059181831b948b60c08097608094818301868501351490606085013514169201013584141615610c165789019a890160243760061b9360e0850160a452610104850194600086526040019060c437600080858982865af115610b8a5750505050600101610af6565b869394503d610bcb575b507fafc445e20000000000000000000000000000000000000000000000000000000060005260045260645260849081510190526000fd5b84601f3d01821c911c90600381810292808311610bff575b505050835a910110610bf55784610b94565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610be3565b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea2646970667358221220c5c8d054d9d5df7c3530eab1c32506aad1fcb6772c1457f0da5443ad9e91b4a364736f6c634300080e0033",
              "opcodes": "PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23 JUMPI CALLER PUSH1 0x80 MSTORE PUSH2 0xC76 SWAP1 DUP2 PUSH2 0x29 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3C5 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x362 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x27F JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x142 JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x116 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0xFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x110 PUSH2 0x10B PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST ADD PUSH2 0xC8 JUMP JUMPDEST DUP1 PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE CALLER PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x1FC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x215 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x116 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x268 JUMPI PUSH2 0x23D DUP5 DUP7 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x279 PUSH2 0x10B PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x532 JUMP JUMPDEST ADD PUSH2 0x22C JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x2CF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x316 JUMPI PUSH2 0x2EC SWAP2 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x39E DUP2 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 DUP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x508 JUMPI PUSH2 0x41F PUSH2 0x418 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x4B6 JUMPI DUP2 PUSH2 0x4A6 DUP5 PUSH2 0x476 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE AND SWAP2 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x542 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x57B JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x5C1 DUP2 PUSH2 0x344 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x5CF DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x613 JUMPI DUP1 PUSH2 0x5ED PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH2 0x5FA PUSH1 0x40 DUP3 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x608 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x712 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x61E DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x696 JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x66C JUMPI DUP1 PUSH2 0x648 PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH2 0x655 PUSH1 0x40 DUP3 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x80 PUSH2 0x663 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x6A1 DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x6AA DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x6E8 JUMPI DUP1 PUSH2 0x6BF PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6CB PUSH1 0x40 DUP4 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6D7 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x77C JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x76E JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x7F6 JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x835 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x869 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x860 JUMPI DUP6 PUSH2 0x7FC JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x84E JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x8DB JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x91E JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x949 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x860 JUMPI DUP6 PUSH2 0x8E4 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x937 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0xA0D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0xA50 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0xA84 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0xA7B JUMPI DUP7 PUSH2 0xA18 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0xA69 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB09 JUMPI POP POP POP POP POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP5 CALLDATALOAD DUP3 ADD SWAP5 DUP6 CALLDATALOAD SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x962 JUMPI PUSH1 0xA0 SWAP2 DUP3 DUP9 ADD SWAP3 DUP4 CALLDATALOAD PUSH1 0x5 SWAP2 DUP2 DUP4 SHL SWAP5 DUP12 PUSH1 0xC0 DUP1 SWAP8 PUSH1 0x80 SWAP5 DUP2 DUP4 ADD DUP7 DUP6 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP6 ADD CALLDATALOAD EQ AND SWAP3 ADD ADD CALLDATALOAD DUP5 EQ AND ISZERO PUSH2 0xC16 JUMPI DUP10 ADD SWAP11 DUP10 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x6 SHL SWAP4 PUSH1 0xE0 DUP6 ADD PUSH1 0xA4 MSTORE PUSH2 0x104 DUP6 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP6 DUP10 DUP3 DUP7 GAS CALL ISZERO PUSH2 0xB8A JUMPI POP POP POP POP PUSH1 0x1 ADD PUSH2 0xAF6 JUMP JUMPDEST DUP7 SWAP4 SWAP5 POP RETURNDATASIZE PUSH2 0xBCB JUMPI JUMPDEST POP PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH1 0x1F RETURNDATASIZE ADD DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xBFF JUMPI JUMPDEST POP POP POP DUP4 GAS SWAP2 ADD LT PUSH2 0xBF5 JUMPI DUP5 PUSH2 0xB94 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xC8 0xD0 SLOAD 0xD9 0xD5 0xDF PUSH29 0x3530EAB1C32506AAD1FCB6772C1457F0DA5443AD9E91B4A364736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "1078:9135:0:-:0;;;;;;;2836:10;2822:24;;1078:9135;;;;;;2822:24;1078:9135;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_array_struct_ConduitBatch1155Transfer_calldata_dyn_calldata": {
                  "entryPoint": 378,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_array_struct_ConduitTransfer_calldata_dyn_calldata": {
                  "entryPoint": 329,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_address_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes4": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_bytes4": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_array_index_access_struct_ConduitTransfer_calldata_dyn_calldata": {
                  "entryPoint": 1330,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "external_fun_executeBatch1155": {
                  "entryPoint": 639,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_executeWithBatch1155": {
                  "entryPoint": 427,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_updateChannel": {
                  "entryPoint": 866,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_performERC1155BatchTransfers": {
                  "entryPoint": 2763,
                  "id": 538,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_performERC1155Transfer": {
                  "entryPoint": 2448,
                  "id": 528,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_performERC20Transfer": {
                  "entryPoint": 1810,
                  "id": 498,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_performERC721Transfer": {
                  "entryPoint": 2178,
                  "id": 512,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 1476,
                  "id": 277,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "mapping_index_access_mapping_address_bool_of_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 1463,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_enum_ConduitItemType": {
                  "entryPoint": 1450,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_assert_enum_ConduitItemType": {
                  "entryPoint": 1393,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 836,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "18": [
                  {
                    "length": 32,
                    "start": 965
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610362565b5061000e61027f565b5061000e6101ab565b346101465760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101465760043567ffffffffffffffff8111610142576100b5903690600401610149565b9133815280602052604081205415610116575b8281106100fa576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011061010b6001938686610532565b6105c4565b016100c8565b807f93daadf2000000000000000000000000000000000000000000000000000000006024925233600452fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576101fc903690600401610149565b9160243590811161000e5761021590369060040161017a565b919092600033815280602052604081205415610116575b8181106102685761023d8486610acb565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b8061027961010b6001938587610532565b0161022c565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576102cf90369060040161017a565b33600052600060205260406000205415610316576102ec91610acb565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b7f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043561039e81610344565b6024359081151580830361000e5773ffffffffffffffffffffffffffffffffffffffff90817f00000000000000000000000000000000000000000000000000000000000000001633036105085761041f6104188473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5460ff1690565b1515146104b657816104a6846104767fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60405193151584521691602090a2005b506040517f924e341e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9190911660048201529015156024820152604490fd5b60046040517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156105425760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6004111561057b57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105c181610344565b90565b60016105cf826105aa565b6105d881610571565b0361061357806105ed602061061193016105b7565b906105fa604082016105b7565b60a0610608606084016105b7565b92013592610712565b565b600261061e826105aa565b61062781610571565b0361069657600160a08201350361066c5780610648602061061193016105b7565b90610655604082016105b7565b6080610663606084016105b7565b92013592610882565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b60036106a1826105aa565b6106aa81610571565b036106e857806106bf602061061193016105b7565b6106cb604083016105b7565b6106d7606084016105b7565b90608060a085013594013592610990565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d151581161561077c575b505050505050604052606052565b80863b15151661076e579087959691156107bc57602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b156107f657506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d610835575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b601f3d0160051c9060051c908060030291808211610869575b505060205a91011061086057856107fc565b833d81803e3d90fd5b8080600392028380020360091c9203020101868061084e565b9092813b1561096257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af1156108db5750505050604052606052565b8593943d61091e575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b601f3d0160051c9060051c908060030291808211610949575b505060205a91011061086057856108e4565b8080600392028380020360091c92030201018680610937565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b15610a9d57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af115610a0d57505050505060805260a05260c052604052606052565b89949550883d610a50575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b601f3d0160051c9060051c908060030291808211610a84575b505060205a910110610a7b5786610a18565b843d81803e3d90fd5b8080600392028380020360091c92030201018780610a69565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b90816020907f2eb2c2d600000000000000000000000000000000000000000000000000000000825260005b838110610b095750505050506080604052565b8435820194853590813b156109625760a09182880192833560059181831b948b60c08097608094818301868501351490606085013514169201013584141615610c165789019a890160243760061b9360e0850160a452610104850194600086526040019060c437600080858982865af115610b8a5750505050600101610af6565b869394503d610bcb575b507fafc445e20000000000000000000000000000000000000000000000000000000060005260045260645260849081510190526000fd5b84601f3d01821c911c90600381810292808311610bff575b505050835a910110610bf55784610b94565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610be3565b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea2646970667358221220c5c8d054d9d5df7c3530eab1c32506aad1fcb6772c1457f0da5443ad9e91b4a364736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x362 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x27F JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x142 JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x116 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0xFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x110 PUSH2 0x10B PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST ADD PUSH2 0xC8 JUMP JUMPDEST DUP1 PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE CALLER PUSH1 0x4 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x1FC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x215 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x116 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x268 JUMPI PUSH2 0x23D DUP5 DUP7 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x279 PUSH2 0x10B PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x532 JUMP JUMPDEST ADD PUSH2 0x22C JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x2CF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x316 JUMPI PUSH2 0x2EC SWAP2 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x39E DUP2 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 DUP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x508 JUMPI PUSH2 0x41F PUSH2 0x418 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x4B6 JUMPI DUP2 PUSH2 0x4A6 DUP5 PUSH2 0x476 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE AND SWAP2 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x542 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x57B JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x5C1 DUP2 PUSH2 0x344 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x5CF DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x613 JUMPI DUP1 PUSH2 0x5ED PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH2 0x5FA PUSH1 0x40 DUP3 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x608 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x712 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x61E DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x627 DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x696 JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x66C JUMPI DUP1 PUSH2 0x648 PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH2 0x655 PUSH1 0x40 DUP3 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x80 PUSH2 0x663 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x6A1 DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x6AA DUP2 PUSH2 0x571 JUMP JUMPDEST SUB PUSH2 0x6E8 JUMPI DUP1 PUSH2 0x6BF PUSH1 0x20 PUSH2 0x611 SWAP4 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6CB PUSH1 0x40 DUP4 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6D7 PUSH1 0x60 DUP5 ADD PUSH2 0x5B7 JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x77C JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x76E JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x7F6 JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x835 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x869 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x860 JUMPI DUP6 PUSH2 0x7FC JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x84E JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x8DB JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x91E JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x949 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x860 JUMPI DUP6 PUSH2 0x8E4 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x937 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0xA0D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0xA50 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE ADD PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0xA84 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0xA7B JUMPI DUP7 PUSH2 0xA18 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0xA69 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB09 JUMPI POP POP POP POP POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP5 CALLDATALOAD DUP3 ADD SWAP5 DUP6 CALLDATALOAD SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x962 JUMPI PUSH1 0xA0 SWAP2 DUP3 DUP9 ADD SWAP3 DUP4 CALLDATALOAD PUSH1 0x5 SWAP2 DUP2 DUP4 SHL SWAP5 DUP12 PUSH1 0xC0 DUP1 SWAP8 PUSH1 0x80 SWAP5 DUP2 DUP4 ADD DUP7 DUP6 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP6 ADD CALLDATALOAD EQ AND SWAP3 ADD ADD CALLDATALOAD DUP5 EQ AND ISZERO PUSH2 0xC16 JUMPI DUP10 ADD SWAP11 DUP10 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x6 SHL SWAP4 PUSH1 0xE0 DUP6 ADD PUSH1 0xA4 MSTORE PUSH2 0x104 DUP6 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP6 DUP10 DUP3 DUP7 GAS CALL ISZERO PUSH2 0xB8A JUMPI POP POP POP POP PUSH1 0x1 ADD PUSH2 0xAF6 JUMP JUMPDEST DUP7 SWAP4 SWAP5 POP RETURNDATASIZE PUSH2 0xBCB JUMPI JUMPDEST POP PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH1 0x1F RETURNDATASIZE ADD DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xBFF JUMPI JUMPDEST POP POP POP DUP4 GAS SWAP2 ADD LT PUSH2 0xBF5 JUMPI DUP5 PUSH2 0xB94 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xC8 0xD0 SLOAD 0xD9 0xD5 0xDF PUSH29 0x3530EAB1C32506AAD1FCB6772C1457F0DA5443AD9E91B4A364736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "1078:9135:0:-:0;;;;;;;;;-1:-1:-1;1078:9135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1591:1004;;;;;1078:9135;1591:1004;1078:9135;1591:1004;;;;;;3958:26;;;;;;1078:9135;;;;;;;;3943:13;4087:12;;;1078:9135;4087:12;;;;:::i;:::-;;:::i;:::-;1078:9135;3943:13;;1591:1004;;;;;;;1078:9135;1591:1004;;1078:9135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;1591:1004:0;;;;1078:9135;1591:1004;1078:9135;1591:1004;;;;;;6972:26;;;;;;7514:14;;;;:::i;:::-;1078:9135;;;;;;;;6957:13;7101:20;;;1078:9135;7101:20;;;;:::i;:::-;1078:9135;6957:13;;1078:9135;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1591:1004;-1:-1:-1;1591:1004:0;-1:-1:-1;1078:9135:0;1591:1004;;-1:-1:-1;1591:1004:0;;;;;5465:14;;;:::i;:::-;1078:9135;1591:1004;1078:9135;;;;;1591:1004;;-1:-1:-1;1591:1004:0;;1078:9135;1591:1004;;-1:-1:-1;1591:1004:0;1078:9135;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8074:11;;;1078:9135;8060:10;:25;8056:82;;8231:18;;;1078:9135;;8231:9;1078:9135;8231:9;1078:9135;;;8231:9;1078:9135;;;8231:18;1078:9135;;;;;8231:18;1078:9135;;8231:28;8227:106;;8388:18;:27;:18;;8470:31;8388:18;1078:9135;;8231:9;1078:9135;8231:9;1078:9135;;;8231:9;1078:9135;;;8388:18;1078:9135;;;;;;;;;;;;;;8388:27;1078:9135;;;;;;;;;;;8470:31;1078:9135;8227:106;-1:-1:-1;1078:9135:0;;8282:40;;;1078:9135;;;;;;8282:40;;1078:9135;;;;;;;;;;8282:40;8056:82;1078:9135;;;8108:19;;;;1078:9135;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;1078:9135:0;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;8814:1397::-;8980:21;8963:13;;;:::i;:::-;1078:9135;;;:::i;:::-;8963:38;8980:21;;9326:10;;;9358:11;9326:10;;;:::i;:::-;9338:9;;;;;;:::i;:::-;9358:11;9349:7;;;;;:::i;:::-;9358:11;;1078:9135;9358:11;;:::i;:::-;8814:1397::o;8959:1246::-;9408:22;9391:13;;;:::i;:::-;1078:9135;;;:::i;:::-;9391:39;9408:22;;8980:21;9520:11;;;1078:9135;9520:16;9516:91;;9699:10;;;9779:15;9699:10;;;:::i;:::-;9727:9;;;;;;:::i;:::-;9779:15;9754:7;;;;;:::i;:::-;9779:15;;1078:9135;9779:15;;:::i;9516:91::-;9563:29;1078:9135;;9563:29;;;;9387:818;9846:23;9829:13;;;:::i;:::-;1078:9135;;;:::i;:::-;9829:40;9846:23;;9965:10;;;10078:11;9965:10;;;:::i;:::-;9993:9;;;;;:::i;:::-;10020:7;;;;;:::i;:::-;10078:11;10045:15;10078:11;;;1078:9135;10045:15;;1078:9135;10078:11;;:::i;9825:380::-;10177:17;1078:9135;;10177:17;;;;1345:9615:6;;;1564:9390;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:9615;1564:9390;;;;;;;;;;1345:9615::o;1564:9390::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11564:4914;;;11789:4683;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11564:4914::o;11789:4683::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17126:5620;;;;17377:5363;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17126:5620::o;17377:5363::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23697:11483;;23892:11282;;;;;;;;;;;;;;;;;;;;;23697:11483::o;23892:11282::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "execute((uint8,address,address,address,uint256,uint256)[])": "4ce34aa2",
              "executeBatch1155((address,address,address,uint256[],uint256[])[])": "8df25d92",
              "executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "899e104c",
              "updateChannel(address,bool)": "c4e8fcb5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"ChannelStatusAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ChannelClosed(address)\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ChannelStatusAlreadySet(address,bool)\":[{\"details\":\"Revert with an error when attempting to update a channel to the      current status of that channel.\"}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch item transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the item transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch item transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 item transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the item transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"Conduit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"In the constructor, set the deployer as the controller.\"},\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single ERC20/721/1155 item         transfers as well as batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"This contract serves as an originator for \\\"proxied\\\" transfers. Each         conduit is deployed and controlled by a \\\"conduit controller\\\" that can         add and remove \\\"channels\\\" or contracts that can instruct the conduit         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each         conduit has an owner that can arbitrarily add or remove channels, and         a malicious or negligent owner can add a channel that allows for any         approved ERC20/721/1155 tokens to be taken immediately \\u2014 be extremely         cautious with what conduits you give token approvals to!*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conduit/Conduit.sol\":\"Conduit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/Conduit.sol\":{\"keccak256\":\"0xd0a8666160c7c2c1bd74ee4144b0aed727b8a5ee4b3ef9502011bc3e96edd969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9932acb889d618604c52dfa4f241e5f3f793cf489459bb9b858fc768e05b59b\",\"dweb:/ipfs/QmX5UQnq55ZbxLinZPnbrRfNqg96dugYxkkj628PTh2ZGn\"]},\"contracts/conduit/lib/ConduitConstants.sol\":{\"keccak256\":\"0x4b70ada07bfe97fc4cf18e23fbf82831c80ab2251b3ef455b4d0012a980c6f76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71255bb8a6927f7e65d7462b3971eec603ad7e0d72d9a4a4288d2d738ff5a085\",\"dweb:/ipfs/Qma6uCkQdMLE9dKcCTJ9HiChewSPAf3a6mybHSXm9tKxiF\"]},\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x3a9ecf77688f97d1b595be27b49fca3eac93e3f91160d79f0f0063c250fd8aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d596c21d5c7c7b47ca14908cbd7add9c06898c500cf47988446f843c0b28cf96\",\"dweb:/ipfs/QmZf12Y7XHwEWvjd2ZbaUFz4NXsWPFGJF6vNg1HECvXV5m\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xfd2cec45327e9a6ebc02d7efb9daa1cfdabb26eb803e4b2e9b5e82340d92cfed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7fa97afdf70ab91449e54f9a4f40e9da16292ab87b86e7e975e6d92f573dc3\",\"dweb:/ipfs/QmaRvo6P8YYPYNgcuP4HVV2wqDuVSB1t6AwMe8jMbcQY3F\"]},\"contracts/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0xbfcd43fd8c0f3eccfb6b5c10a4c4b794f3004ff08152116f8b1ea6512af336e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0409357d577d488ad2ce54d258888cb1001f23d52b8140a19abc873cff15a2e\",\"dweb:/ipfs/QmYPuHK15VEziDVrdCSxFcBFbgHGE9K3BTSmbz1nAjtLBH\"]},\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xd547a837e72da776edb433ef6bbb5ab1dbf4bc8e98995ca2baf83edcadd73607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324a3db3d18f679f1d4595d275820a3c320a22ae89b16277a39a548b8ccb36cb\",\"dweb:/ipfs/QmdLhvU1RddvwJKNMYbyXBtMDn5P7J9YQMgpWY1qsYXjjF\"]},\"contracts/lib/TokenTransferrer.sol\":{\"keccak256\":\"0xfcfa2be72ad8a3c2c096f9dc892b7040b9efc13315fc283ffe1a407d1c974ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce58309f3fddfed9f7b779e3cb99aa629335bd11a3387d9ea52261f87ac1219c\",\"dweb:/ipfs/QmRVH8o3Q7ybgerhqduSGrH9gVemfe2BZbGhTfvBABNtbq\"]},\"contracts/lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xb55807b4999544c4e336a9ea22a963ed50620522b5406d0cd8d5b6d790a2a322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730aa2bca27798a700577ddedd5e7ec4c28d6ade0cefcceb3431af89d65946ed\",\"dweb:/ipfs/QmQeaMEM6e7oTeoa3fjWf1F3Hs2CEh49GK4qN6p4rbaBeR\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "ConduitInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                }
              ],
              "name": "ChannelClosed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "ChannelStatusAlreadySet",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidController",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidItemType",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                }
              ],
              "name": "ChannelUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batch1155Transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "standardTransfers",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batch1155Transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeWithBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "updateChannel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "execute((uint8,address,address,address,uint256,uint256)[])": "4ce34aa2",
              "executeBatch1155((address,address,address,uint256[],uint256[])[])": "8df25d92",
              "executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "899e104c",
              "updateChannel(address,bool)": "c4e8fcb5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"ChannelStatusAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"ChannelClosed(address)\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ChannelStatusAlreadySet(address,bool)\":[{\"details\":\"Revert with an error when attempting to update a channel to the      current status of that channel.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}]},\"events\":{\"ChannelUpdated(address,bool)\":{\"details\":\"Emit an event whenever a channel is opened or closed.\",\"params\":{\"channel\":\"The channel that has been updated.\",\"open\":\"A boolean indicating whether the conduit is open or not.\"}}},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"ConduitInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 transfers. Only a caller with an         open channel can call this function.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single and batch 1155. Only         a caller with an open channel can call this function.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"ConduitInterface contains all external function interfaces, events,         and errors for conduit contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ConduitInterface.sol\":\"ConduitInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x3a9ecf77688f97d1b595be27b49fca3eac93e3f91160d79f0f0063c250fd8aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d596c21d5c7c7b47ca14908cbd7add9c06898c500cf47988446f843c0b28cf96\",\"dweb:/ipfs/QmZf12Y7XHwEWvjd2ZbaUFz4NXsWPFGJF6vNg1HECvXV5m\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xfd2cec45327e9a6ebc02d7efb9daa1cfdabb26eb803e4b2e9b5e82340d92cfed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7fa97afdf70ab91449e54f9a4f40e9da16292ab87b86e7e975e6d92f573dc3\",\"dweb:/ipfs/QmaRvo6P8YYPYNgcuP4HVV2wqDuVSB1t6AwMe8jMbcQY3F\"]},\"contracts/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0xbfcd43fd8c0f3eccfb6b5c10a4c4b794f3004ff08152116f8b1ea6512af336e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0409357d577d488ad2ce54d258888cb1001f23d52b8140a19abc873cff15a2e\",\"dweb:/ipfs/QmYPuHK15VEziDVrdCSxFcBFbgHGE9K3BTSmbz1nAjtLBH\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "TokenTransferrerErrors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Invalid1155BatchTransferEncoding",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UnusedItemParameters",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenTransferrerErrors\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/TokenTransferrerErrors.sol\":\"TokenTransferrerErrors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xd547a837e72da776edb433ef6bbb5ab1dbf4bc8e98995ca2baf83edcadd73607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324a3db3d18f679f1d4595d275820a3c320a22ae89b16277a39a548b8ccb36cb\",\"dweb:/ipfs/QmdLhvU1RddvwJKNMYbyXBtMDn5P7J9YQMgpWY1qsYXjjF\"]}},\"version\":1}"
        }
      },
      "contracts/lib/TokenTransferrer.sol": {
        "TokenTransferrer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Invalid1155BatchTransferEncoding",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UnusedItemParameters",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601357603a908160198239f35b600080fdfe600080fdfea264697066735822122009ee10367c59346e8123f2ae293b2b4100b6d84e0954e44c36c51a5b3f64b03f64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xEE LT CALLDATASIZE PUSH29 0x59346E8123F2AE293B2B4100B6D84E0954E44C36C51A5B3F64B03F6473 PUSH16 0x6C634300080E00330000000000000000 ",
              "sourceMap": "849:34333:6:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea264697066735822122009ee10367c59346e8123f2ae293b2b4100b6d84e0954e44c36c51a5b3f64b03f64736f6c634300080e0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xEE LT CALLDATASIZE PUSH29 0x59346E8123F2AE293B2B4100B6D84E0954E44C36C51A5B3F64B03F6473 PUSH16 0x6C634300080E00330000000000000000 ",
              "sourceMap": "849:34333:6:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"0age\",\"custom:coauthor\":\"d1ll0ntransmissions11\",\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenTransferrer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"TokenTransferrer is a library for performing optimized ERC20, ERC721,         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as         by conduits deployed by the ConduitController. Use great caution when         considering these functions for use in other codebases, as there are         significant side effects and edge cases that need to be thoroughly         understood and carefully addressed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/TokenTransferrer.sol\":\"TokenTransferrer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x3a9ecf77688f97d1b595be27b49fca3eac93e3f91160d79f0f0063c250fd8aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d596c21d5c7c7b47ca14908cbd7add9c06898c500cf47988446f843c0b28cf96\",\"dweb:/ipfs/QmZf12Y7XHwEWvjd2ZbaUFz4NXsWPFGJF6vNg1HECvXV5m\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xfd2cec45327e9a6ebc02d7efb9daa1cfdabb26eb803e4b2e9b5e82340d92cfed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7fa97afdf70ab91449e54f9a4f40e9da16292ab87b86e7e975e6d92f573dc3\",\"dweb:/ipfs/QmaRvo6P8YYPYNgcuP4HVV2wqDuVSB1t6AwMe8jMbcQY3F\"]},\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xd547a837e72da776edb433ef6bbb5ab1dbf4bc8e98995ca2baf83edcadd73607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324a3db3d18f679f1d4595d275820a3c320a22ae89b16277a39a548b8ccb36cb\",\"dweb:/ipfs/QmdLhvU1RddvwJKNMYbyXBtMDn5P7J9YQMgpWY1qsYXjjF\"]},\"contracts/lib/TokenTransferrer.sol\":{\"keccak256\":\"0xfcfa2be72ad8a3c2c096f9dc892b7040b9efc13315fc283ffe1a407d1c974ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce58309f3fddfed9f7b779e3cb99aa629335bd11a3387d9ea52261f87ac1219c\",\"dweb:/ipfs/QmRVH8o3Q7ybgerhqduSGrH9gVemfe2BZbGhTfvBABNtbq\"]},\"contracts/lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xb55807b4999544c4e336a9ea22a963ed50620522b5406d0cd8d5b6d790a2a322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730aa2bca27798a700577ddedd5e7ec4c28d6ade0cefcceb3431af89d65946ed\",\"dweb:/ipfs/QmQeaMEM6e7oTeoa3fjWf1F3Hs2CEh49GK4qN6p4rbaBeR\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/conduit/Conduit.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/Conduit.sol",
          "exportedSymbols": {
            "ChannelClosed_channel_ptr": [
              290
            ],
            "ChannelClosed_error_length": [
              293
            ],
            "ChannelClosed_error_ptr": [
              287
            ],
            "ChannelClosed_error_signature": [
              284
            ],
            "ChannelKey_channel_ptr": [
              296
            ],
            "ChannelKey_length": [
              302
            ],
            "ChannelKey_slot_ptr": [
              299
            ],
            "Conduit": [
              278
            ],
            "ConduitBatch1155Transfer": [
              340
            ],
            "ConduitInterface": [
              414
            ],
            "ConduitItemType": [
              309
            ],
            "ConduitTransfer": [
              327
            ],
            "TokenTransferrer": [
              539
            ]
          },
          "id": 279,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:0"
            },
            {
              "absolutePath": "contracts/interfaces/ConduitInterface.sol",
              "file": "../interfaces/ConduitInterface.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 415,
              "src": "58:70:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "ConduitInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 414,
                    "src": "67:16:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
              "file": "./lib/ConduitEnums.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 310,
              "src": "130:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "ConduitItemType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 309,
                    "src": "139:15:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/TokenTransferrer.sol",
              "file": "../lib/TokenTransferrer.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 540,
              "src": "189:63:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "TokenTransferrer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 539,
                    "src": "198:16:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "./lib/ConduitStructs.sol",
              "id": 10,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 341,
              "src": "273:93:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 8,
                    "name": "ConduitTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 327,
                    "src": "286:15:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 9,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 340,
                    "src": "307:24:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitConstants.sol",
              "file": "./lib/ConduitConstants.sol",
              "id": 11,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 303,
              "src": "368:36:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 13,
                    "name": "ConduitInterface",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 414,
                    "src": "1098:16:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1098:16:0"
                },
                {
                  "baseName": {
                    "id": 15,
                    "name": "TokenTransferrer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 539,
                    "src": "1116:16:0"
                  },
                  "id": 16,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1116:16:0"
                }
              ],
              "canonicalName": "Conduit",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 12,
                "nodeType": "StructuredDocumentation",
                "src": "406:671:0",
                "text": " @title Conduit\n @author 0age\n @notice This contract serves as an originator for \"proxied\" transfers. Each\n         conduit is deployed and controlled by a \"conduit controller\" that can\n         add and remove \"channels\" or contracts that can instruct the conduit\n         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each\n         conduit has an owner that can arbitrarily add or remove channels, and\n         a malicious or negligent owner can add a channel that allows for any\n         approved ERC20/721/1155 tokens to be taken immediately — be extremely\n         cautious with what conduits you give token approvals to!*"
              },
              "fullyImplemented": true,
              "id": 278,
              "linearizedBaseContracts": [
                278,
                539,
                474,
                414
              ],
              "name": "Conduit",
              "nameLocation": "1087:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "immutable",
                  "name": "_controller",
                  "nameLocation": "1246:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1220:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_channels",
                  "nameLocation": "1338:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1305:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 21,
                    "keyType": {
                      "id": 19,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1313:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1305:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 20,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1324:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 27,
                    "nodeType": "Block",
                    "src": "1509:1149:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1600:995:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ChannelKey_channel_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1671:22:0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "caller",
                                      "nodeType": "YulIdentifier",
                                      "src": "1695:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1695:8:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1664:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1664:40:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1664:40:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ChannelKey_slot_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1795:19:0"
                                  },
                                  {
                                    "name": "_channels.slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "1816:14:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1788:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1788:43:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1788:43:0"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2071:514:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ChannelClosed_error_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2242:23:0"
                                        },
                                        {
                                          "name": "ChannelClosed_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "2267:29:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2235:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2235:62:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2235:62:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ChannelClosed_channel_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2379:25:0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "caller",
                                            "nodeType": "YulIdentifier",
                                            "src": "2406:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2406:8:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2372:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2372:43:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2372:43:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ChannelClosed_error_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2519:23:0"
                                        },
                                        {
                                          "name": "ChannelClosed_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "2544:26:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2512:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2512:59:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2512:59:0"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "ChannelKey_channel_ptr",
                                            "nodeType": "YulIdentifier",
                                            "src": "2013:22:0"
                                          },
                                          {
                                            "name": "ChannelKey_length",
                                            "nodeType": "YulIdentifier",
                                            "src": "2037:17:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "keccak256",
                                          "nodeType": "YulIdentifier",
                                          "src": "2003:9:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2003:52:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1997:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1997:59:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1973:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1973:97:0"
                              },
                              "nodeType": "YulIf",
                              "src": "1970:615:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 290,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2379:25:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 293,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2544:26:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 287,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2242:23:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 287,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2519:23:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 284,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2267:29:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 296,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1671:22:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 296,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2013:22:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 302,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2037:17:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 299,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1795:19:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1816:14:0",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "id": 25,
                        "nodeType": "InlineAssembly",
                        "src": "1591:1004:0"
                      },
                      {
                        "id": 26,
                        "nodeType": "PlaceholderStatement",
                        "src": "2650:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 23,
                    "nodeType": "StructuredDocumentation",
                    "src": "1354:123:0",
                    "text": " @notice Ensure that the caller is currently registered as an open channel\n         on the conduit."
                  },
                  "id": 28,
                  "name": "onlyOpenChannel",
                  "nameLocation": "1491:15:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1506:2:0"
                  },
                  "src": "1482:1176:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 37,
                    "nodeType": "Block",
                    "src": "2765:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 32,
                            "name": "_controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2822:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 33,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2836:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2836:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2822:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 36,
                        "nodeType": "ExpressionStatement",
                        "src": "2822:24:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 29,
                    "nodeType": "StructuredDocumentation",
                    "src": "2664:82:0",
                    "text": " @notice In the constructor, set the deployer as the controller."
                  },
                  "id": 38,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2762:2:0"
                  },
                  "returnParameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2765:0:0"
                  },
                  "scope": 278,
                  "src": "2751:102:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    381
                  ],
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "3755:621:0",
                    "statements": [
                      {
                        "assignments": [
                          52
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 52,
                            "mutability": "mutable",
                            "name": "totalStandardTransfers",
                            "nameLocation": "3847:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 81,
                            "src": "3839:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 51,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3839:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 55,
                        "initialValue": {
                          "expression": {
                            "id": 53,
                            "name": "transfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "3872:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct ConduitTransfer calldata[] calldata"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3872:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3839:49:0"
                      },
                      {
                        "body": {
                          "id": 73,
                          "nodeType": "Block",
                          "src": "3988:259:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 64,
                                      "name": "transfers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 43,
                                      "src": "4087:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata[] calldata"
                                      }
                                    },
                                    "id": 66,
                                    "indexExpression": {
                                      "id": 65,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57,
                                      "src": "4097:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4087:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  ],
                                  "id": 63,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 277,
                                  "src": "4077:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransfer_$327_calldata_ptr_$returns$__$",
                                    "typeString": "function (struct ConduitTransfer calldata)"
                                  }
                                },
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4077:23:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 68,
                              "nodeType": "ExpressionStatement",
                              "src": "4077:23:0"
                            },
                            {
                              "id": 72,
                              "nodeType": "UncheckedBlock",
                              "src": "4191:46:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 70,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "4219:3:0",
                                    "subExpression": {
                                      "id": 69,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57,
                                      "src": "4221:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 71,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4219:3:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "3958:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 61,
                            "name": "totalStandardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3962:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3958:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74,
                        "initializationExpression": {
                          "assignments": [
                            57
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 57,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3951:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 74,
                              "src": "3943:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 56,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3943:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 59,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3955:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3943:13:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "3938:309:0"
                      },
                      {
                        "expression": {
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 75,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "4335:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 76,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4348:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$278",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "execute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 82,
                              "src": "4348:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$327_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitTransfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4348:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4335:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "4335:34:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 39,
                    "nodeType": "StructuredDocumentation",
                    "src": "2859:738:0",
                    "text": " @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param transfers The ERC20/721/1155 transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "4ce34aa2",
                  "id": 82,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 47,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 46,
                        "name": "onlyOpenChannel",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28,
                        "src": "3699:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3699:15:0"
                    }
                  ],
                  "name": "execute",
                  "nameLocation": "3611:7:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3682:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "transfers",
                        "nameLocation": "3646:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "3619:36:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 41,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 40,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 327,
                              "src": "3619:15:0"
                            },
                            "referencedDeclaration": 327,
                            "src": "3619:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 42,
                          "nodeType": "ArrayTypeName",
                          "src": "3619:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3618:38:0"
                  },
                  "returnParameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "3739:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "3732:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3732:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3731:19:0"
                  },
                  "scope": 278,
                  "src": "3602:774:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    391
                  ],
                  "body": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "5291:328:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 96,
                              "name": "batchTransfers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "5465:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            ],
                            "id": 95,
                            "name": "_performERC1155BatchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "5435:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (struct ConduitBatch1155Transfer calldata[] calldata)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5435:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "5435:45:0"
                      },
                      {
                        "expression": {
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 99,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "5569:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 100,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5582:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$278",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executeBatch1155",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106,
                              "src": "5582:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$340_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5582:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5569:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "5569:43:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 83,
                    "nodeType": "StructuredDocumentation",
                    "src": "4382:750:0",
                    "text": " @notice Execute a sequence of batch 1155 item transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param batchTransfers The 1155 batch item transfers to perform.\n @return magicValue A magic value indicating that the item transfers were\n                    performed successfully."
                  },
                  "functionSelector": "8df25d92",
                  "id": 106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 91,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 90,
                        "name": "onlyOpenChannel",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28,
                        "src": "5247:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5247:15:0"
                    }
                  ],
                  "name": "executeBatch1155",
                  "nameLocation": "5146:16:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 89,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5238:8:0"
                  },
                  "parameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "5208:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "5172:50:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 85,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 84,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "5172:24:0"
                            },
                            "referencedDeclaration": 340,
                            "src": "5172:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 86,
                          "nodeType": "ArrayTypeName",
                          "src": "5172:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5162:66:0"
                  },
                  "returnParameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "5279:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "5272:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "5272:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5271:19:0"
                  },
                  "scope": 278,
                  "src": "5137:482:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    405
                  ],
                  "body": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "6752:920:0",
                    "statements": [
                      {
                        "assignments": [
                          124
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 124,
                            "mutability": "mutable",
                            "name": "totalStandardTransfers",
                            "nameLocation": "6844:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 157,
                            "src": "6836:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 123,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6836:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 127,
                        "initialValue": {
                          "expression": {
                            "id": 125,
                            "name": "standardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "6869:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct ConduitTransfer calldata[] calldata"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6869:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6836:57:0"
                      },
                      {
                        "body": {
                          "id": 145,
                          "nodeType": "Block",
                          "src": "7002:267:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 136,
                                      "name": "standardTransfers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 111,
                                      "src": "7101:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata[] calldata"
                                      }
                                    },
                                    "id": 138,
                                    "indexExpression": {
                                      "id": 137,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 129,
                                      "src": "7119:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7101:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  ],
                                  "id": 135,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 277,
                                  "src": "7091:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransfer_$327_calldata_ptr_$returns$__$",
                                    "typeString": "function (struct ConduitTransfer calldata)"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7091:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 140,
                              "nodeType": "ExpressionStatement",
                              "src": "7091:31:0"
                            },
                            {
                              "id": 144,
                              "nodeType": "UncheckedBlock",
                              "src": "7213:46:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7241:3:0",
                                    "subExpression": {
                                      "id": 141,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 129,
                                      "src": "7243:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 143,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7241:3:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 132,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "6972:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 133,
                            "name": "totalStandardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "6976:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6972:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 146,
                        "initializationExpression": {
                          "assignments": [
                            129
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 129,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6965:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 146,
                              "src": "6957:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 128,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6957:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 131,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6969:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6957:13:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "6952:317:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 148,
                              "name": "batchTransfers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "7514:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            ],
                            "id": 147,
                            "name": "_performERC1155BatchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "7484:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (struct ConduitBatch1155Transfer calldata[] calldata)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7484:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "7484:45:0"
                      },
                      {
                        "expression": {
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 151,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "7618:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 152,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7631:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$278",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executeWithBatch1155",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 158,
                              "src": "7631:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$327_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ConduitBatch1155Transfer_$340_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitTransfer memory[] memory,struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7631:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "7618:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 156,
                        "nodeType": "ExpressionStatement",
                        "src": "7618:47:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "5625:910:0",
                    "text": " @notice Execute a sequence of transfers, both single ERC20/721/1155 item\n         transfers as well as batch 1155 item transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param standardTransfers The ERC20/721/1155 item transfers to perform.\n @param batchTransfers    The 1155 batch item transfers to perform.\n @return magicValue A magic value indicating that the item transfers were\n                    performed successfully."
                  },
                  "functionSelector": "899e104c",
                  "id": 158,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 119,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 118,
                        "name": "onlyOpenChannel",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28,
                        "src": "6708:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6708:15:0"
                    }
                  ],
                  "name": "executeWithBatch1155",
                  "nameLocation": "6549:20:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 117,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6699:8:0"
                  },
                  "parameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "standardTransfers",
                        "nameLocation": "6606:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "6579:44:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 109,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 108,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 327,
                              "src": "6579:15:0"
                            },
                            "referencedDeclaration": 327,
                            "src": "6579:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 110,
                          "nodeType": "ArrayTypeName",
                          "src": "6579:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 115,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "6669:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "6633:50:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 113,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 112,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "6633:24:0"
                            },
                            "referencedDeclaration": 340,
                            "src": "6633:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 114,
                          "nodeType": "ArrayTypeName",
                          "src": "6633:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6569:120:0"
                  },
                  "returnParameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "6740:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "6733:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "6733:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6732:19:0"
                  },
                  "scope": 278,
                  "src": "6540:1132:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    413
                  ],
                  "body": {
                    "id": 199,
                    "nodeType": "Block",
                    "src": "7976:532:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 167,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8060:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8060:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 169,
                            "name": "_controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "8074:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8060:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 175,
                        "nodeType": "IfStatement",
                        "src": "8056:82:0",
                        "trueBody": {
                          "id": 174,
                          "nodeType": "Block",
                          "src": "8087:51:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 171,
                                  "name": "InvalidController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 364,
                                  "src": "8108:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8108:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 173,
                              "nodeType": "RevertStatement",
                              "src": "8101:26:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 176,
                              "name": "_channels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "8231:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 178,
                            "indexExpression": {
                              "id": 177,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "8241:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8231:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 179,
                            "name": "isOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "8253:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8231:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "IfStatement",
                        "src": "8227:106:0",
                        "trueBody": {
                          "id": 186,
                          "nodeType": "Block",
                          "src": "8261:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 182,
                                    "name": "channel",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "8306:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 183,
                                    "name": "isOpen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 163,
                                    "src": "8315:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 181,
                                  "name": "ChannelStatusAlreadySet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 358,
                                  "src": "8282:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool) pure"
                                  }
                                },
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8282:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 185,
                              "nodeType": "RevertStatement",
                              "src": "8275:47:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 188,
                              "name": "_channels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "8388:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 190,
                            "indexExpression": {
                              "id": 189,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "8398:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8388:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 191,
                            "name": "isOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "8409:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8388:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "8388:27:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 195,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "8485:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 196,
                              "name": "isOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "8494:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 194,
                            "name": "ChannelUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "8470:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8470:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 198,
                        "nodeType": "EmitStatement",
                        "src": "8465:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 159,
                    "nodeType": "StructuredDocumentation",
                    "src": "7678:222:0",
                    "text": " @notice Open or close a given channel. Only callable by the controller.\n @param channel The channel to open or close.\n @param isOpen  The status of the channel (either open or closed)."
                  },
                  "functionSelector": "c4e8fcb5",
                  "id": 200,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateChannel",
                  "nameLocation": "7914:13:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 165,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7967:8:0"
                  },
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "7936:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "7928:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7928:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "7950:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "7945:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7945:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7927:30:0"
                  },
                  "returnParameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7976:0:0"
                  },
                  "scope": 278,
                  "src": "7905:603:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 276,
                    "nodeType": "Block",
                    "src": "8873:1338:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ConduitItemType_$309",
                            "typeString": "enum ConduitItemType"
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 207,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 204,
                              "src": "8963:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                "typeString": "struct ConduitTransfer calldata"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "itemType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 316,
                            "src": "8963:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$309",
                              "typeString": "enum ConduitItemType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 209,
                              "name": "ConduitItemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "8980:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$309_$",
                                "typeString": "type(enum ConduitItemType)"
                              }
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "8980:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$309",
                              "typeString": "enum ConduitItemType"
                            }
                          },
                          "src": "8963:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$309",
                              "typeString": "enum ConduitItemType"
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 224,
                                "name": "item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "9391:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                  "typeString": "struct ConduitTransfer calldata"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "itemType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 316,
                              "src": "9391:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 226,
                                "name": "ConduitItemType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "9408:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$309_$",
                                  "typeString": "type(enum ConduitItemType)"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC721",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 307,
                              "src": "9408:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "src": "9391:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                "typeString": "enum ConduitItemType"
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 250,
                                  "name": "item",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 204,
                                  "src": "9829:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                    "typeString": "struct ConduitTransfer calldata"
                                  }
                                },
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "itemType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 316,
                                "src": "9829:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                  "typeString": "enum ConduitItemType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 252,
                                  "name": "ConduitItemType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "9846:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$309_$",
                                    "typeString": "type(enum ConduitItemType)"
                                  }
                                },
                                "id": 253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ERC1155",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 308,
                                "src": "9846:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ConduitItemType_$309",
                                  "typeString": "enum ConduitItemType"
                                }
                              },
                              "src": "9829:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 272,
                              "nodeType": "Block",
                              "src": "10120:85:0",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 269,
                                      "name": "InvalidItemType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 361,
                                      "src": "10177:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10177:17:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 271,
                                  "nodeType": "RevertStatement",
                                  "src": "10170:24:0"
                                }
                              ]
                            },
                            "id": 273,
                            "nodeType": "IfStatement",
                            "src": "9825:380:0",
                            "trueBody": {
                              "id": 268,
                              "nodeType": "Block",
                              "src": "9871:243:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 256,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "9965:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 257,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "token",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 318,
                                        "src": "9965:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 258,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "9993:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "from",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 320,
                                        "src": "9993:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 260,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "10020:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 261,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "to",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 322,
                                        "src": "10020:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 262,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "10045:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 263,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "identifier",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 324,
                                        "src": "10045:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 264,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "10078:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 326,
                                        "src": "10078:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 255,
                                      "name": "_performERC1155Transfer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 528,
                                      "src": "9924:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,address,uint256,uint256)"
                                      }
                                    },
                                    "id": 266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9924:179:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 267,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9924:179:0"
                                }
                              ]
                            }
                          },
                          "id": 274,
                          "nodeType": "IfStatement",
                          "src": "9387:818:0",
                          "trueBody": {
                            "id": 249,
                            "nodeType": "Block",
                            "src": "9432:387:0",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 229,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9520:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 326,
                                    "src": "9520:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9535:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "9520:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 237,
                                "nodeType": "IfStatement",
                                "src": "9516:91:0",
                                "trueBody": {
                                  "id": 236,
                                  "nodeType": "Block",
                                  "src": "9538:69:0",
                                  "statements": [
                                    {
                                      "errorCall": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 233,
                                          "name": "InvalidERC721TransferAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 420,
                                          "src": "9563:27:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 234,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9563:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 235,
                                      "nodeType": "RevertStatement",
                                      "src": "9556:36:0"
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 239,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 204,
                                        "src": "9699:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 240,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "token",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 318,
                                      "src": "9699:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 241,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 204,
                                        "src": "9727:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 242,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "from",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 320,
                                      "src": "9727:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 243,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 204,
                                        "src": "9754:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 244,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "to",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 322,
                                      "src": "9754:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 245,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 204,
                                        "src": "9779:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 246,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "identifier",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 324,
                                      "src": "9779:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 238,
                                    "name": "_performERC721Transfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 512,
                                    "src": "9659:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,address,address,uint256)"
                                    }
                                  },
                                  "id": 247,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9659:149:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 248,
                                "nodeType": "ExpressionStatement",
                                "src": "9659:149:0"
                              }
                            ]
                          }
                        },
                        "id": 275,
                        "nodeType": "IfStatement",
                        "src": "8959:1246:0",
                        "trueBody": {
                          "id": 223,
                          "nodeType": "Block",
                          "src": "9003:378:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 213,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9326:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 214,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 318,
                                    "src": "9326:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 215,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9338:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "from",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 320,
                                    "src": "9338:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 217,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9349:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 322,
                                    "src": "9349:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 219,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "9358:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 326,
                                    "src": "9358:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 212,
                                  "name": "_performERC20Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 498,
                                  "src": "9304:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9304:66:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 222,
                              "nodeType": "ExpressionStatement",
                              "src": "9304:66:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "8514:295:0",
                    "text": " @dev Internal function to transfer a given ERC20/721/1155 item. Note that\n      channels are expected to implement checks against transferring any\n      zero-amount items if that constraint is desired.\n @param item The ERC20/721/1155 item to transfer."
                  },
                  "id": 277,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "8823:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "item",
                        "nameLocation": "8858:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "8833:29:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConduitTransfer_$327_calldata_ptr",
                          "typeString": "struct ConduitTransfer"
                        },
                        "typeName": {
                          "id": 203,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 202,
                            "name": "ConduitTransfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 327,
                            "src": "8833:15:0"
                          },
                          "referencedDeclaration": 327,
                          "src": "8833:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                            "typeString": "struct ConduitTransfer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8832:31:0"
                  },
                  "returnParameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8873:0:0"
                  },
                  "scope": 278,
                  "src": "8814:1397:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 279,
              "src": "1078:9135:0",
              "usedErrors": [
                351,
                358,
                361,
                364,
                420,
                423,
                426,
                439,
                454,
                465,
                470,
                473
              ]
            }
          ],
          "src": "32:10182:0"
        },
        "id": 0
      },
      "contracts/conduit/lib/ConduitConstants.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/lib/ConduitConstants.sol",
          "exportedSymbols": {
            "ChannelClosed_channel_ptr": [
              290
            ],
            "ChannelClosed_error_length": [
              293
            ],
            "ChannelClosed_error_ptr": [
              287
            ],
            "ChannelClosed_error_signature": [
              284
            ],
            "ChannelKey_channel_ptr": [
              296
            ],
            "ChannelKey_length": [
              302
            ],
            "ChannelKey_slot_ptr": [
              299
            ]
          },
          "id": 303,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 280,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:1"
            },
            {
              "constant": true,
              "id": 284,
              "mutability": "constant",
              "name": "ChannelClosed_error_signature",
              "nameLocation": "115:29:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "98:123:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 281,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "98:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307839336461616466323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "153:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_66876361928286935092717866925301290808224162558783313296595378262690056110080_by_1",
                      "typeString": "int_const 6687...(69 digits omitted)...0080"
                    },
                    "value": "0x93daadf200000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 283,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "147:74:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_66876361928286935092717866925301290808224162558783313296595378262690056110080_by_1",
                  "typeString": "int_const 6687...(69 digits omitted)...0080"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 287,
              "mutability": "constant",
              "name": "ChannelClosed_error_ptr",
              "nameLocation": "240:23:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "223:47:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 285,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "223:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783030",
                "id": 286,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "266:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x00"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 290,
              "mutability": "constant",
              "name": "ChannelClosed_channel_ptr",
              "nameLocation": "289:25:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "272:48:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 288,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "272:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 289,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "317:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 293,
              "mutability": "constant",
              "name": "ChannelClosed_error_length",
              "nameLocation": "339:26:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "322:50:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 291,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "322:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 292,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "368:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 296,
              "mutability": "constant",
              "name": "ChannelKey_channel_ptr",
              "nameLocation": "554:22:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "537:46:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 294,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783030",
                "id": 295,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "579:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x00"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 299,
              "mutability": "constant",
              "name": "ChannelKey_slot_ptr",
              "nameLocation": "602:19:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "585:43:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 297,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "585:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 298,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "624:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 302,
              "mutability": "constant",
              "name": "ChannelKey_length",
              "nameLocation": "647:17:1",
              "nodeType": "VariableDeclaration",
              "scope": 303,
              "src": "630:41:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 300,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "630:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783430",
                "id": 301,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "667:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_64_by_1",
                  "typeString": "int_const 64"
                },
                "value": "0x40"
              },
              "visibility": "internal"
            }
          ],
          "src": "32:641:1"
        },
        "id": 1
      },
      "contracts/conduit/lib/ConduitEnums.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
          "exportedSymbols": {
            "ConduitItemType": [
              309
            ]
          },
          "id": 310,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 304,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:2"
            },
            {
              "canonicalName": "ConduitItemType",
              "id": 309,
              "members": [
                {
                  "id": 305,
                  "name": "NATIVE",
                  "nameLocation": "85:6:2",
                  "nodeType": "EnumValue",
                  "src": "85:6:2"
                },
                {
                  "id": 306,
                  "name": "ERC20",
                  "nameLocation": "107:5:2",
                  "nodeType": "EnumValue",
                  "src": "107:5:2"
                },
                {
                  "id": 307,
                  "name": "ERC721",
                  "nameLocation": "118:6:2",
                  "nodeType": "EnumValue",
                  "src": "118:6:2"
                },
                {
                  "id": 308,
                  "name": "ERC1155",
                  "nameLocation": "130:7:2",
                  "nodeType": "EnumValue",
                  "src": "130:7:2"
                }
              ],
              "name": "ConduitItemType",
              "nameLocation": "63:15:2",
              "nodeType": "EnumDefinition",
              "src": "58:81:2"
            }
          ],
          "src": "32:108:2"
        },
        "id": 2
      },
      "contracts/conduit/lib/ConduitStructs.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
          "exportedSymbols": {
            "ConduitBatch1155Transfer": [
              340
            ],
            "ConduitItemType": [
              309
            ],
            "ConduitTransfer": [
              327
            ]
          },
          "id": 341,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 311,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:3"
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
              "file": "./ConduitEnums.sol",
              "id": 313,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 341,
              "sourceUnit": 310,
              "src": "58:53:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 312,
                    "name": "ConduitItemType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 309,
                    "src": "67:15:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "canonicalName": "ConduitTransfer",
              "id": 327,
              "members": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "itemType",
                  "nameLocation": "158:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "142:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ConduitItemType_$309",
                    "typeString": "enum ConduitItemType"
                  },
                  "typeName": {
                    "id": 315,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 314,
                      "name": "ConduitItemType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 309,
                      "src": "142:15:3"
                    },
                    "referencedDeclaration": 309,
                    "src": "142:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ConduitItemType_$309",
                      "typeString": "enum ConduitItemType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "180:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "172:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "199:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "191:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "191:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "217:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "209:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "233:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "225:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "225:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "257:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "249:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ConduitTransfer",
              "nameLocation": "120:15:3",
              "nodeType": "StructDefinition",
              "scope": 341,
              "src": "113:153:3",
              "visibility": "public"
            },
            {
              "canonicalName": "ConduitBatch1155Transfer",
              "id": 340,
              "members": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "314:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "306:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "333:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "325:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "351:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "343:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "369:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "359:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 334,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "359:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 335,
                    "nodeType": "ArrayTypeName",
                    "src": "359:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "388:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "378:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 337,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "378:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 338,
                    "nodeType": "ArrayTypeName",
                    "src": "378:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ConduitBatch1155Transfer",
              "nameLocation": "275:24:3",
              "nodeType": "StructDefinition",
              "scope": 341,
              "src": "268:130:3",
              "visibility": "public"
            }
          ],
          "src": "32:367:3"
        },
        "id": 3
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ConduitInterface.sol",
          "exportedSymbols": {
            "ConduitBatch1155Transfer": [
              340
            ],
            "ConduitInterface": [
              414
            ],
            "ConduitTransfer": [
              327
            ]
          },
          "id": 415,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 342,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:4"
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "../conduit/lib/ConduitStructs.sol",
              "id": 345,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 415,
              "sourceUnit": 341,
              "src": "77:102:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 343,
                    "name": "ConduitTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 327,
                    "src": "90:15:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 344,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 340,
                    "src": "111:24:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ConduitInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 346,
                "nodeType": "StructuredDocumentation",
                "src": "181:174:4",
                "text": " @title ConduitInterface\n @author 0age\n @notice ConduitInterface contains all external function interfaces, events,\n         and errors for conduit contracts."
              },
              "fullyImplemented": false,
              "id": 414,
              "linearizedBaseContracts": [
                414
              ],
              "name": "ConduitInterface",
              "nameLocation": "366:16:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 347,
                    "nodeType": "StructuredDocumentation",
                    "src": "389:144:4",
                    "text": " @dev Revert with an error when attempting to execute transfers using a\n      caller that does not have an open channel."
                  },
                  "errorSelector": "93daadf2",
                  "id": 351,
                  "name": "ChannelClosed",
                  "nameLocation": "544:13:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "566:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 351,
                        "src": "558:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "557:17:4"
                  },
                  "src": "538:37:4"
                },
                {
                  "documentation": {
                    "id": 352,
                    "nodeType": "StructuredDocumentation",
                    "src": "581:131:4",
                    "text": " @dev Revert with an error when attempting to update a channel to the\n      current status of that channel."
                  },
                  "errorSelector": "924e341e",
                  "id": 358,
                  "name": "ChannelStatusAlreadySet",
                  "nameLocation": "723:23:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "755:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "747:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "747:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "769:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "764:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "764:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "746:30:4"
                  },
                  "src": "717:60:4"
                },
                {
                  "documentation": {
                    "id": 359,
                    "nodeType": "StructuredDocumentation",
                    "src": "783:154:4",
                    "text": " @dev Revert with an error when attempting to execute a transfer for an\n      item that does not have an ERC20/721/1155 item type."
                  },
                  "errorSelector": "7932f1fc",
                  "id": 361,
                  "name": "InvalidItemType",
                  "nameLocation": "948:15:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "963:2:4"
                  },
                  "src": "942:24:4"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "972:156:4",
                    "text": " @dev Revert with an error when attempting to update the status of a\n      channel from a caller that is not the conduit controller."
                  },
                  "errorSelector": "6d5769be",
                  "id": 364,
                  "name": "InvalidController",
                  "nameLocation": "1139:17:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1156:2:4"
                  },
                  "src": "1133:26:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 365,
                    "nodeType": "StructuredDocumentation",
                    "src": "1165:220:4",
                    "text": " @dev Emit an event whenever a channel is opened or closed.\n @param channel The channel that has been updated.\n @param open    A boolean indicating whether the conduit is open or not."
                  },
                  "eventSelector": "ae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2",
                  "id": 371,
                  "name": "ChannelUpdated",
                  "nameLocation": "1396:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "1427:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "1411:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1411:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 369,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "open",
                        "nameLocation": "1441:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "1436:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1436:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1410:36:4"
                  },
                  "src": "1390:57:4"
                },
                {
                  "documentation": {
                    "id": 372,
                    "nodeType": "StructuredDocumentation",
                    "src": "1453:352:4",
                    "text": " @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n         with an open channel can call this function.\n @param transfers The ERC20/721/1155 transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "4ce34aa2",
                  "id": 381,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "1819:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "transfers",
                        "nameLocation": "1854:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "1827:36:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 374,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 373,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 327,
                              "src": "1827:15:4"
                            },
                            "referencedDeclaration": 327,
                            "src": "1827:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 375,
                          "nodeType": "ArrayTypeName",
                          "src": "1827:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1826:38:4"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "1906:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "1899:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1899:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1898:19:4"
                  },
                  "scope": 414,
                  "src": "1810:108:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "1924:353:4",
                    "text": " @notice Execute a sequence of batch 1155 transfers. Only a caller with an\n         open channel can call this function.\n @param batch1155Transfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "8df25d92",
                  "id": 391,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeBatch1155",
                  "nameLocation": "2291:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "batch1155Transfers",
                        "nameLocation": "2353:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 391,
                        "src": "2317:54:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 384,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 383,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "2317:24:4"
                            },
                            "referencedDeclaration": 340,
                            "src": "2317:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 385,
                          "nodeType": "ArrayTypeName",
                          "src": "2317:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2307:70:4"
                  },
                  "returnParameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 389,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "2403:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 391,
                        "src": "2396:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 388,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2396:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2395:19:4"
                  },
                  "scope": 414,
                  "src": "2282:133:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 392,
                    "nodeType": "StructuredDocumentation",
                    "src": "2421:444:4",
                    "text": " @notice Execute a sequence of transfers, both single and batch 1155. Only\n         a caller with an open channel can call this function.\n @param standardTransfers  The ERC20/721/1155 transfers to perform.\n @param batch1155Transfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "899e104c",
                  "id": 405,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeWithBatch1155",
                  "nameLocation": "2879:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "standardTransfers",
                        "nameLocation": "2936:17:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "2909:44:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 394,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 393,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 327,
                              "src": "2909:15:4"
                            },
                            "referencedDeclaration": 327,
                            "src": "2909:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$327_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 395,
                          "nodeType": "ArrayTypeName",
                          "src": "2909:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$327_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "batch1155Transfers",
                        "nameLocation": "2999:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "2963:54:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 398,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 397,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "2963:24:4"
                            },
                            "referencedDeclaration": 340,
                            "src": "2963:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 399,
                          "nodeType": "ArrayTypeName",
                          "src": "2963:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2899:124:4"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "3049:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "3042:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3042:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3041:19:4"
                  },
                  "scope": 414,
                  "src": "2870:191:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 406,
                    "nodeType": "StructuredDocumentation",
                    "src": "3067:222:4",
                    "text": " @notice Open or close a given channel. Only callable by the controller.\n @param channel The channel to open or close.\n @param isOpen  The status of the channel (either open or closed)."
                  },
                  "functionSelector": "c4e8fcb5",
                  "id": 413,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateChannel",
                  "nameLocation": "3303:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "3325:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3317:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3317:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "3339:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3334:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3334:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3316:30:4"
                  },
                  "returnParameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3355:0:4"
                  },
                  "scope": 414,
                  "src": "3294:62:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 415,
              "src": "356:3002:4",
              "usedErrors": [
                351,
                358,
                361,
                364
              ]
            }
          ],
          "src": "32:3327:4"
        },
        "id": 4
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/TokenTransferrerErrors.sol",
          "exportedSymbols": {
            "TokenTransferrerErrors": [
              474
            ]
          },
          "id": 475,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 416,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TokenTransferrerErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 417,
                "nodeType": "StructuredDocumentation",
                "src": "58:40:5",
                "text": " @title TokenTransferrerErrors"
              },
              "fullyImplemented": true,
              "id": 474,
              "linearizedBaseContracts": [
                474
              ],
              "name": "TokenTransferrerErrors",
              "nameLocation": "109:22:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 418,
                    "nodeType": "StructuredDocumentation",
                    "src": "138:121:5",
                    "text": " @dev Revert with an error when an ERC721 transfer with amount other than\n      one is attempted."
                  },
                  "errorSelector": "efcc00b1",
                  "id": 420,
                  "name": "InvalidERC721TransferAmount",
                  "nameLocation": "270:27:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "297:2:5"
                  },
                  "src": "264:36:5"
                },
                {
                  "documentation": {
                    "id": 421,
                    "nodeType": "StructuredDocumentation",
                    "src": "306:129:5",
                    "text": " @dev Revert with an error when attempting to fulfill an order where an\n      item has an amount of zero."
                  },
                  "errorSelector": "91b3e514",
                  "id": 423,
                  "name": "MissingItemAmount",
                  "nameLocation": "446:17:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "463:2:5"
                  },
                  "src": "440:26:5"
                },
                {
                  "documentation": {
                    "id": 424,
                    "nodeType": "StructuredDocumentation",
                    "src": "472:427:5",
                    "text": " @dev Revert with an error when attempting to fulfill an order where an\n      item has unused parameters. This includes both the token and the\n      identifier parameters for native transfers as well as the identifier\n      parameter for ERC20 transfers. Note that the conduit does not\n      perform this check, leaving it up to the calling channel to enforce\n      when desired."
                  },
                  "errorSelector": "6ab37ce7",
                  "id": 426,
                  "name": "UnusedItemParameters",
                  "nameLocation": "910:20:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "930:2:5"
                  },
                  "src": "904:29:5"
                },
                {
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "939:455:5",
                    "text": " @dev Revert with an error when an ERC20, ERC721, or ERC1155 token\n      transfer reverts.\n @param token      The token for which the transfer was attempted.\n @param from       The source of the attempted transfer.\n @param to         The recipient of the attempted transfer.\n @param identifier The identifier for the attempted transfer.\n @param amount     The amount for the attempted transfer."
                  },
                  "errorSelector": "f486bc87",
                  "id": 439,
                  "name": "TokenTransferGenericFailure",
                  "nameLocation": "1405:27:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1450:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1442:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1442:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1473:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1465:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1465:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1495:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1487:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1487:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "1515:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1507:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1507:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1543:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1535:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1535:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1432:123:5"
                  },
                  "src": "1399:157:5"
                },
                {
                  "documentation": {
                    "id": 440,
                    "nodeType": "StructuredDocumentation",
                    "src": "1562:437:5",
                    "text": " @dev Revert with an error when a batch ERC1155 token transfer reverts.\n @param token       The token for which the transfer was attempted.\n @param from        The source of the attempted transfer.\n @param to          The recipient of the attempted transfer.\n @param identifiers The identifiers for the attempted transfer.\n @param amounts     The amounts for the attempted transfer."
                  },
                  "errorSelector": "afc445e2",
                  "id": 454,
                  "name": "ERC1155BatchTransferGenericFailure",
                  "nameLocation": "2010:34:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2062:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2054:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2054:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 444,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2085:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2077:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2077:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2107:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2099:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2099:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 449,
                        "mutability": "mutable",
                        "name": "identifiers",
                        "nameLocation": "2129:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2119:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 447,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2119:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 448,
                          "nodeType": "ArrayTypeName",
                          "src": "2119:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "2160:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "2150:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 450,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2150:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 451,
                          "nodeType": "ArrayTypeName",
                          "src": "2150:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2044:129:5"
                  },
                  "src": "2004:170:5"
                },
                {
                  "documentation": {
                    "id": 455,
                    "nodeType": "StructuredDocumentation",
                    "src": "2180:406:5",
                    "text": " @dev Revert with an error when an ERC20 token transfer returns a falsey\n      value.\n @param token      The token for which the ERC20 transfer was attempted.\n @param from       The source of the attempted ERC20 transfer.\n @param to         The recipient of the attempted ERC20 transfer.\n @param amount     The amount for the attempted ERC20 transfer."
                  },
                  "errorSelector": "98891923",
                  "id": 465,
                  "name": "BadReturnValueFromERC20OnTransfer",
                  "nameLocation": "2597:33:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2648:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2640:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2640:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2671:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2663:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2663:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2693:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2685:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2685:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2713:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2705:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2705:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2630:95:5"
                  },
                  "src": "2591:135:5"
                },
                {
                  "documentation": {
                    "id": 466,
                    "nodeType": "StructuredDocumentation",
                    "src": "2732:215:5",
                    "text": " @dev Revert with an error when an account being called as an assumed\n      contract does not have code and returns no data.\n @param account The account that should contain code."
                  },
                  "errorSelector": "5f15d672",
                  "id": 470,
                  "name": "NoContract",
                  "nameLocation": "2958:10:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2977:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "2969:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2969:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2968:17:5"
                  },
                  "src": "2952:34:5"
                },
                {
                  "documentation": {
                    "id": 471,
                    "nodeType": "StructuredDocumentation",
                    "src": "2992:224:5",
                    "text": " @dev Revert with an error when attempting to execute an 1155 batch\n      transfer using calldata not produced by default ABI encoding or with\n      different lengths for ids and amounts arrays."
                  },
                  "errorSelector": "eba2084c",
                  "id": 473,
                  "name": "Invalid1155BatchTransferEncoding",
                  "nameLocation": "3227:32:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3259:2:5"
                  },
                  "src": "3221:41:5"
                }
              ],
              "scope": 475,
              "src": "99:3165:5",
              "usedErrors": [
                420,
                423,
                426,
                439,
                454,
                465,
                470,
                473
              ]
            }
          ],
          "src": "32:3233:5"
        },
        "id": 5
      },
      "contracts/lib/TokenTransferrer.sol": {
        "ast": {
          "absolutePath": "contracts/lib/TokenTransferrer.sol",
          "exportedSymbols": {
            "AlmostOneWord": [
              544
            ],
            "BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
              709
            ],
            "BadReturnValueFromERC20OnTransfer_error_from_ptr": [
              703
            ],
            "BadReturnValueFromERC20OnTransfer_error_length": [
              712
            ],
            "BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
              697
            ],
            "BadReturnValueFromERC20OnTransfer_error_signature": [
              694
            ],
            "BadReturnValueFromERC20OnTransfer_error_to_ptr": [
              706
            ],
            "BadReturnValueFromERC20OnTransfer_error_token_ptr": [
              700
            ],
            "BatchTransfer1155Params_amounts_head_ptr": [
              730
            ],
            "BatchTransfer1155Params_amounts_length_baseOffset": [
              748
            ],
            "BatchTransfer1155Params_calldata_baseSize": [
              739
            ],
            "BatchTransfer1155Params_data_head_ptr": [
              733
            ],
            "BatchTransfer1155Params_data_length_baseOffset": [
              751
            ],
            "BatchTransfer1155Params_data_length_basePtr": [
              736
            ],
            "BatchTransfer1155Params_ids_head_ptr": [
              727
            ],
            "BatchTransfer1155Params_ids_length_offset": [
              745
            ],
            "BatchTransfer1155Params_ids_length_ptr": [
              742
            ],
            "BatchTransfer1155Params_ptr": [
              724
            ],
            "ConduitBatch1155Transfer": [
              340
            ],
            "ConduitBatch1155Transfer_amounts_head_offset": [
              763
            ],
            "ConduitBatch1155Transfer_amounts_length_baseOffset": [
              769
            ],
            "ConduitBatch1155Transfer_calldata_baseSize": [
              772
            ],
            "ConduitBatch1155Transfer_from_offset": [
              757
            ],
            "ConduitBatch1155Transfer_ids_head_offset": [
              760
            ],
            "ConduitBatch1155Transfer_ids_length_offset": [
              766
            ],
            "ConduitBatch1155Transfer_usable_head_size": [
              754
            ],
            "ConduitBatchTransfer_amounts_head_offset": [
              775
            ],
            "CostPerWord": [
              718
            ],
            "DefaultFreeMemoryPointer": [
              562
            ],
            "ERC1155BatchTransferGenericFailure_error_signature": [
              789
            ],
            "ERC1155BatchTransferGenericFailure_ids_offset": [
              795
            ],
            "ERC1155BatchTransferGenericFailure_token_ptr": [
              792
            ],
            "ERC1155_safeBatchTransferFrom_selector": [
              634
            ],
            "ERC1155_safeBatchTransferFrom_signature": [
              625
            ],
            "ERC1155_safeTransferFrom_amount_ptr": [
              609
            ],
            "ERC1155_safeTransferFrom_data_length_offset": [
              621
            ],
            "ERC1155_safeTransferFrom_data_length_ptr": [
              615
            ],
            "ERC1155_safeTransferFrom_data_offset_ptr": [
              612
            ],
            "ERC1155_safeTransferFrom_from_ptr": [
              600
            ],
            "ERC1155_safeTransferFrom_id_ptr": [
              606
            ],
            "ERC1155_safeTransferFrom_length": [
              618
            ],
            "ERC1155_safeTransferFrom_sig_ptr": [
              597
            ],
            "ERC1155_safeTransferFrom_signature": [
              594
            ],
            "ERC1155_safeTransferFrom_to_ptr": [
              603
            ],
            "ERC20_transferFrom_amount_ptr": [
              587
            ],
            "ERC20_transferFrom_from_ptr": [
              581
            ],
            "ERC20_transferFrom_length": [
              590
            ],
            "ERC20_transferFrom_sig_ptr": [
              578
            ],
            "ERC20_transferFrom_signature": [
              575
            ],
            "ERC20_transferFrom_to_ptr": [
              584
            ],
            "ERC721_transferFrom_from_ptr": [
              643
            ],
            "ERC721_transferFrom_id_ptr": [
              649
            ],
            "ERC721_transferFrom_length": [
              652
            ],
            "ERC721_transferFrom_sig_ptr": [
              640
            ],
            "ERC721_transferFrom_signature": [
              637
            ],
            "ERC721_transferFrom_to_ptr": [
              646
            ],
            "ExtraGasBuffer": [
              715
            ],
            "FreeMemoryPointerSlot": [
              556
            ],
            "Invalid1155BatchTransferEncoding_length": [
              781
            ],
            "Invalid1155BatchTransferEncoding_ptr": [
              778
            ],
            "Invalid1155BatchTransferEncoding_selector": [
              785
            ],
            "MemoryExpansionCoefficient": [
              721
            ],
            "NoContract_error_length": [
              665
            ],
            "NoContract_error_sig_ptr": [
              659
            ],
            "NoContract_error_signature": [
              656
            ],
            "NoContract_error_token_ptr": [
              662
            ],
            "OneWord": [
              547
            ],
            "Slot0x80": [
              565
            ],
            "Slot0xA0": [
              568
            ],
            "Slot0xC0": [
              571
            ],
            "ThreeWords": [
              553
            ],
            "TokenTransferGenericFailure_error_amount_ptr": [
              687
            ],
            "TokenTransferGenericFailure_error_from_ptr": [
              678
            ],
            "TokenTransferGenericFailure_error_id_ptr": [
              684
            ],
            "TokenTransferGenericFailure_error_length": [
              690
            ],
            "TokenTransferGenericFailure_error_sig_ptr": [
              672
            ],
            "TokenTransferGenericFailure_error_signature": [
              669
            ],
            "TokenTransferGenericFailure_error_to_ptr": [
              681
            ],
            "TokenTransferGenericFailure_error_token_ptr": [
              675
            ],
            "TokenTransferrer": [
              539
            ],
            "TokenTransferrerErrors": [
              474
            ],
            "TwoWords": [
              550
            ],
            "ZeroSlot": [
              559
            ]
          },
          "id": 540,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 476,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:6"
            },
            {
              "absolutePath": "contracts/lib/TokenTransferrerConstants.sol",
              "file": "./TokenTransferrerConstants.sol",
              "id": 477,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 540,
              "sourceUnit": 796,
              "src": "58:41:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/TokenTransferrerErrors.sol",
              "file": "../interfaces/TokenTransferrerErrors.sol",
              "id": 479,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 540,
              "sourceUnit": 475,
              "src": "120:86:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 478,
                    "name": "TokenTransferrerErrors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 474,
                    "src": "133:22:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "../conduit/lib/ConduitStructs.sol",
              "id": 481,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 540,
              "sourceUnit": 341,
              "src": "208:77:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 480,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 340,
                    "src": "217:24:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 483,
                    "name": "TokenTransferrerErrors",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 474,
                    "src": "878:22:6"
                  },
                  "id": 484,
                  "nodeType": "InheritanceSpecifier",
                  "src": "878:22:6"
                }
              ],
              "canonicalName": "TokenTransferrer",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 482,
                "nodeType": "StructuredDocumentation",
                "src": "287:561:6",
                "text": " @title TokenTransferrer\n @author 0age\n @custom:coauthor d1ll0n\n @custom:coauthor transmissions11\n @notice TokenTransferrer is a library for performing optimized ERC20, ERC721,\n         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as\n         by conduits deployed by the ConduitController. Use great caution when\n         considering these functions for use in other codebases, as there are\n         significant side effects and edge cases that need to be thoroughly\n         understood and carefully addressed."
              },
              "fullyImplemented": true,
              "id": 539,
              "linearizedBaseContracts": [
                539,
                474
              ],
              "name": "TokenTransferrer",
              "nameLocation": "858:16:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "1480:9480:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1573:9381:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1747:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "1771:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1765:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1765:28:6"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "1751:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1891:26:6"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "1919:28:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1884:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1884:64:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1884:64:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1968:27:6"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "1997:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1961:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1961:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1961:41:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2022:25:6"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "2049:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2015:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2015:37:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2015:37:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_amount_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2072:29:6"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "2103:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2065:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2065:45:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2065:45:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2586:232:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "2626:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2626:5:6"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "2649:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2672:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2691:26:6"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2735:25:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2778:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "OneWord",
                                    "nodeType": "YulIdentifier",
                                    "src": "2797:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "2604:4:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2604:214:6"
                              },
                              "variables": [
                                {
                                  "name": "callStatus",
                                  "nodeType": "YulTypedName",
                                  "src": "2590:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2912:407:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3180:1:6",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3174:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3174:8:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3184:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "eq",
                                              "nodeType": "YulIdentifier",
                                              "src": "3171:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3171:15:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3191:14:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3191:16:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3209:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "3188:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3188:24:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3167:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3167:46:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "returndatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "3242:14:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3242:16:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3235:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3235:24:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nodeType": "YulIdentifier",
                                      "src": "3143:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3143:134:6"
                                  },
                                  {
                                    "name": "callStatus",
                                    "nodeType": "YulIdentifier",
                                    "src": "3295:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2927:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2927:392:6"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "2916:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3701:7052:6",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "4011:6522:6",
                                      "statements": [
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "4099:6113:6",
                                            "statements": [
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "4201:4737:6",
                                                  "statements": [
                                                    {
                                                      "body": {
                                                        "nodeType": "YulBlock",
                                                        "src": "4396:3302:6",
                                                        "statements": [
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "4808:179:6",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "arguments": [],
                                                                      "functionName": {
                                                                        "name": "returndatasize",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4876:14:6"
                                                                      },
                                                                      "nodeType": "YulFunctionCall",
                                                                      "src": "4876:16:6"
                                                                    },
                                                                    {
                                                                      "name": "AlmostOneWord",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "4894:13:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "add",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4872:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "4872:36:6"
                                                                },
                                                                {
                                                                  "name": "OneWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4946:7:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "div",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4831:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "4831:156:6"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "returnDataWords",
                                                                "nodeType": "YulTypedName",
                                                                "src": "4812:15:6",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "5318:42:6",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "name": "memPointer",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5340:10:6"
                                                                },
                                                                {
                                                                  "name": "OneWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5352:7:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "div",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5336:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "5336:24:6"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "msizeWords",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5322:10:6",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "5475:45:6",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "name": "CostPerWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5491:11:6"
                                                                },
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5504:15:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "mul",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5487:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "5487:33:6"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "cost",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5479:4:6",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "body": {
                                                              "nodeType": "YulBlock",
                                                              "src": "5669:1258:6",
                                                              "statements": [
                                                                {
                                                                  "nodeType": "YulAssignment",
                                                                  "src": "5707:1186:6",
                                                                  "value": {
                                                                    "arguments": [
                                                                      {
                                                                        "name": "cost",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5760:4:6"
                                                                      },
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "arguments": [
                                                                              {
                                                                                "arguments": [
                                                                                  {
                                                                                    "name": "returnDataWords",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "5965:15:6"
                                                                                  },
                                                                                  {
                                                                                    "name": "msizeWords",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6034:10:6"
                                                                                  }
                                                                                ],
                                                                                "functionName": {
                                                                                  "name": "sub",
                                                                                  "nodeType": "YulIdentifier",
                                                                                  "src": "5908:3:6"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "5908:186:6"
                                                                              },
                                                                              {
                                                                                "name": "CostPerWord",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6144:11:6"
                                                                              }
                                                                            ],
                                                                            "functionName": {
                                                                              "name": "mul",
                                                                              "nodeType": "YulIdentifier",
                                                                              "src": "5855:3:6"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "5855:346:6"
                                                                          },
                                                                          {
                                                                            "arguments": [
                                                                              {
                                                                                "arguments": [
                                                                                  {
                                                                                    "arguments": [
                                                                                      {
                                                                                        "name": "returnDataWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "6418:15:6"
                                                                                      },
                                                                                      {
                                                                                        "name": "returnDataWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "6491:15:6"
                                                                                      }
                                                                                    ],
                                                                                    "functionName": {
                                                                                      "name": "mul",
                                                                                      "nodeType": "YulIdentifier",
                                                                                      "src": "6357:3:6"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "6357:203:6"
                                                                                  },
                                                                                  {
                                                                                    "arguments": [
                                                                                      {
                                                                                        "name": "msizeWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "6618:10:6"
                                                                                      },
                                                                                      {
                                                                                        "name": "msizeWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "6630:10:6"
                                                                                      }
                                                                                    ],
                                                                                    "functionName": {
                                                                                      "name": "mul",
                                                                                      "nodeType": "YulIdentifier",
                                                                                      "src": "6614:3:6"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "6614:27:6"
                                                                                  }
                                                                                ],
                                                                                "functionName": {
                                                                                  "name": "sub",
                                                                                  "nodeType": "YulIdentifier",
                                                                                  "src": "6300:3:6"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "6300:391:6"
                                                                              },
                                                                              {
                                                                                "name": "MemoryExpansionCoefficient",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6741:26:6"
                                                                              }
                                                                            ],
                                                                            "functionName": {
                                                                              "name": "div",
                                                                              "nodeType": "YulIdentifier",
                                                                              "src": "6247:3:6"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "6247:566:6"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "add",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "5806:3:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "5806:1049:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "add",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "5715:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5715:1178:6"
                                                                  },
                                                                  "variableNames": [
                                                                    {
                                                                      "name": "cost",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "5707:4:6"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            "condition": {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5640:15:6"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "5657:10:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "gt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5637:2:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "5637:31:6"
                                                            },
                                                            "nodeType": "YulIf",
                                                            "src": "5634:1293:6"
                                                          },
                                                          {
                                                            "body": {
                                                              "nodeType": "YulBlock",
                                                              "src": "7226:442:6",
                                                              "statements": [
                                                                {
                                                                  "expression": {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "7411:1:6",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "7414:1:6",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "arguments": [],
                                                                        "functionName": {
                                                                          "name": "returndatasize",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "7417:14:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "7417:16:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "returndatacopy",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7396:14:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7396:38:6"
                                                                  },
                                                                  "nodeType": "YulExpressionStatement",
                                                                  "src": "7396:38:6"
                                                                },
                                                                {
                                                                  "expression": {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "7614:1:6",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "arguments": [],
                                                                        "functionName": {
                                                                          "name": "returndatasize",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "7617:14:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "7617:16:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "revert",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7607:6:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7607:27:6"
                                                                  },
                                                                  "nodeType": "YulExpressionStatement",
                                                                  "src": "7607:27:6"
                                                                }
                                                              ]
                                                            },
                                                            "condition": {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "cost",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7196:4:6"
                                                                    },
                                                                    {
                                                                      "name": "ExtraGasBuffer",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "7202:14:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "add",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7192:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "7192:25:6"
                                                                },
                                                                {
                                                                  "arguments": [],
                                                                  "functionName": {
                                                                    "name": "gas",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7219:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "7219:5:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "lt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7189:2:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "7189:36:6"
                                                            },
                                                            "nodeType": "YulIf",
                                                            "src": "7186:482:6"
                                                          }
                                                        ]
                                                      },
                                                      "condition": {
                                                        "arguments": [],
                                                        "functionName": {
                                                          "name": "returndatasize",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "4379:14:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "4379:16:6"
                                                      },
                                                      "nodeType": "YulIf",
                                                      "src": "4376:3322:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_sig_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7846:41:6"
                                                          },
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_signature",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7921:43:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7806:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7806:188:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "7806:188:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_token_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8063:43:6"
                                                          },
                                                          {
                                                            "name": "token",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8140:5:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8023:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8023:152:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8023:152:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_from_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8244:42:6"
                                                          },
                                                          {
                                                            "name": "from",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8320:4:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8204:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8204:150:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8204:150:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_to_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8390:40:6"
                                                          },
                                                          {
                                                            "name": "to",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8432:2:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8383:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8383:52:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8383:52:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_id_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8471:40:6"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "8513:1:6",
                                                            "type": "",
                                                            "value": "0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8464:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8464:51:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8464:51:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_amount_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8584:44:6"
                                                          },
                                                          {
                                                            "name": "amount",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8662:6:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8544:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8544:154:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8544:154:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_sig_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8767:41:6"
                                                          },
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_length",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8842:40:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "revert",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8727:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8727:185:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "8727:185:6"
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "name": "callStatus",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4189:10:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "iszero",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4182:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "4182:18:6"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "4179:4759:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9150:47:6"
                                                    },
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_signature",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9227:49:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9114:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9114:188:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9114:188:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9363:49:6"
                                                    },
                                                    {
                                                      "name": "token",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9442:5:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9327:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9327:146:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9327:146:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9534:48:6"
                                                    },
                                                    {
                                                      "name": "from",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9612:4:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9498:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9498:144:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9498:144:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9703:46:6"
                                                    },
                                                    {
                                                      "name": "to",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9779:2:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9667:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9667:140:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9667:140:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9868:50:6"
                                                    },
                                                    {
                                                      "name": "amount",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9948:6:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9832:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9832:148:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9832:148:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10041:47:6"
                                                    },
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_length",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10118:46:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10005:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "10005:185:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "10005:185:6"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "success",
                                                "nodeType": "YulIdentifier",
                                                "src": "4090:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "4083:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4083:15:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "4080:6132:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "10322:24:6"
                                              },
                                              {
                                                "name": "NoContract_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "10348:26:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "10315:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10315:60:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "10315:60:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "10403:26:6"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "10431:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "10396:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10396:41:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "10396:41:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "10465:24:6"
                                              },
                                              {
                                                "name": "NoContract_error_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "10491:23:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "10458:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10458:57:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "10458:57:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "token",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3991:5:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "extcodesize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3979:11:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "3979:18:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "iszero",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3972:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3972:26:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "iszero",
                                                "nodeType": "YulIdentifier",
                                                "src": "3965:6:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3965:34:6"
                                            },
                                            {
                                              "name": "success",
                                              "nodeType": "YulIdentifier",
                                              "src": "4001:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "3961:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3961:48:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "3954:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3954:56:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "3951:6582:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "success",
                                        "nodeType": "YulIdentifier",
                                        "src": "3657:7:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3680:14:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3680:16:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "3673:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3673:24:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3666:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3666:32:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3653:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3653:46:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3646:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3646:54:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3643:7110:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "10831:21:6"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "10854:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10824:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10824:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10824:41:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "10932:8:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10942:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10925:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10925:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10925:19:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 544,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4894:13:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 709,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9868:50:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 703,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9534:48:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 712,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10118:46:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 697,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10041:47:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 697,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9150:47:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 694,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9227:49:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 706,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9703:46:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 700,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9363:49:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5491:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6144:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 587,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2072:29:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 581,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1968:27:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 590,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2735:25:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 578,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1891:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 578,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2691:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 575,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1919:28:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 584,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2022:25:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 715,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7202:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10831:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1771:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 721,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6741:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10491:23:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10322:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10465:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10348:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 662,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10403:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2797:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4946:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5352:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 687,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8584:44:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 678,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8244:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 684,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8471:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 690,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8842:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7846:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8767:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 669,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7921:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 681,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8390:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 675,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8063:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 559,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10932:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 493,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2103:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 493,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8662:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 493,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9948:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1997:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8320:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9612:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 491,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2049:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 491,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8432:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 491,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9779:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10431:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2649:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3991:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8140:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 487,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9442:5:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 496,
                        "nodeType": "InlineAssembly",
                        "src": "1564:9390:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 485,
                    "nodeType": "StructuredDocumentation",
                    "src": "907:433:6",
                    "text": " @dev Internal function to transfer ERC20 tokens from a given originator\n      to a given recipient. Sufficient approvals must be set on the\n      contract performing the transfer.\n @param token      The ERC20 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param amount     The amount to transfer."
                  },
                  "id": 498,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC20Transfer",
                  "nameLocation": "1354:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1393:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1385:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1385:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1416:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1408:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1408:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1438:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1430:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1430:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1458:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1450:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1450:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1375:95:6"
                  },
                  "returnParameters": {
                    "id": 495,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1480:0:6"
                  },
                  "scope": 539,
                  "src": "1345:9615:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 511,
                    "nodeType": "Block",
                    "src": "11704:4774:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "11798:4674:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11891:224:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "11916:24:6"
                                        },
                                        {
                                          "name": "NoContract_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "11942:26:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "11909:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11909:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11909:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "11993:26:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "12021:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "11986:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11986:41:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11986:41:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "12051:24:6"
                                        },
                                        {
                                          "name": "NoContract_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "12077:23:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12044:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12044:57:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12044:57:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulIdentifier",
                                        "src": "11883:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extcodesize",
                                      "nodeType": "YulIdentifier",
                                      "src": "11871:11:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11871:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11864:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11864:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "11861:254:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12289:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "12313:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12307:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12307:28:6"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "12293:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12430:27:6"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "12459:29:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12423:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12423:66:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12423:66:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12509:28:6"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "12539:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12502:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12502:42:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12502:42:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12564:26:6"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "12592:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12557:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12557:38:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12557:38:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_id_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12615:26:6"
                                  },
                                  {
                                    "name": "identifier",
                                    "nodeType": "YulIdentifier",
                                    "src": "12643:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12608:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12608:46:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12608:46:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12723:225:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "12760:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12760:5:6"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "12783:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12806:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12825:27:6"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12870:26:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12914:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12933:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "12738:4:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12738:210:6"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "12727:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13022:3249:6",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "13181:2308:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "13492:143:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "13548:14:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "13548:16:6"
                                                  },
                                                  {
                                                    "name": "AlmostOneWord",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "13566:13:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "13544:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "13544:36:6"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "13606:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "13515:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13515:120:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "returnDataWords",
                                              "nodeType": "YulTypedName",
                                              "src": "13496:15:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "13883:42:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "memPointer",
                                                "nodeType": "YulIdentifier",
                                                "src": "13905:10:6"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "13917:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "13901:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13901:24:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "msizeWords",
                                              "nodeType": "YulTypedName",
                                              "src": "13887:10:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "14016:45:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "CostPerWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "14032:11:6"
                                              },
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "14045:15:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "14028:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14028:33:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "cost",
                                              "nodeType": "YulTypedName",
                                              "src": "14020:4:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "14186:734:6",
                                            "statements": [
                                              {
                                                "nodeType": "YulAssignment",
                                                "src": "14212:686:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "cost",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14253:4:6"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "14369:15:6"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "14386:10:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "14365:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "14365:32:6"
                                                            },
                                                            {
                                                              "name": "CostPerWord",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "14435:11:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "mul",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "14324:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "14324:156:6"
                                                        },
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14604:15:6"
                                                                    },
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14621:15:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "14600:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "14600:37:6"
                                                                },
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14683:10:6"
                                                                    },
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "14695:10:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "14679:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "14679:27:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "14555:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "14555:189:6"
                                                            },
                                                            {
                                                              "name": "MemoryExpansionCoefficient",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "14782:26:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "div",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "14514:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "14514:328:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14287:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "14287:585:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14220:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "14220:678:6"
                                                },
                                                "variableNames": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14212:4:6"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "14157:15:6"
                                              },
                                              {
                                                "name": "msizeWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "14174:10:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "14154:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14154:31:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "14151:769:6"
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "15171:300:6",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15293:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15296:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15299:14:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "15299:16:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "returndatacopy",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15278:14:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "15278:38:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "15278:38:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15429:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15432:14:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "15432:16:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15422:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "15422:27:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "15422:27:6"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15141:4:6"
                                                  },
                                                  {
                                                    "name": "ExtraGasBuffer",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15147:14:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15137:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15137:25:6"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "gas",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15164:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15164:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "lt",
                                              "nodeType": "YulIdentifier",
                                              "src": "15134:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15134:36:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "15131:340:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "returndatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "13164:14:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13164:16:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "13161:2328:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15601:41:6"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "15664:43:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15573:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15573:152:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15573:152:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15749:43:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "15794:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15742:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15742:58:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15742:58:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_from_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15824:42:6"
                                        },
                                        {
                                          "name": "from",
                                          "nodeType": "YulIdentifier",
                                          "src": "15868:4:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15817:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15817:56:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15817:56:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_to_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15897:40:6"
                                        },
                                        {
                                          "name": "to",
                                          "nodeType": "YulIdentifier",
                                          "src": "15939:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15890:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15890:52:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15890:52:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_id_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15966:40:6"
                                        },
                                        {
                                          "name": "identifier",
                                          "nodeType": "YulIdentifier",
                                          "src": "16008:10:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15959:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15959:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15959:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_amount_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16043:44:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16089:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16036:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16036:55:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16036:55:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16136:41:6"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "16199:40:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16108:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16108:149:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16108:149:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nodeType": "YulIdentifier",
                                    "src": "13013:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13006:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13006:15:6"
                              },
                              "nodeType": "YulIf",
                              "src": "13003:3268:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "16349:21:6"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "16372:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16342:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16342:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16342:41:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "16450:8:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16460:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16443:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16443:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16443:19:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 544,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13566:13:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14032:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14435:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 643,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12509:28:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 649,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12615:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 652,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12870:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 640,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12430:27:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 640,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12825:27:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 637,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12459:29:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 646,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12564:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 715,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15147:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12313:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16349:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 721,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14782:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12077:23:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11916:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12051:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11942:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 662,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11993:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13606:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13917:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 687,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16043:44:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 678,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15824:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 684,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15966:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 690,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16199:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15601:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16136:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 669,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15664:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 681,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15897:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 675,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15749:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 559,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16450:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 503,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12539:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 503,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15868:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 507,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12643:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 507,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16008:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 505,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12592:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 505,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15939:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 501,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11883:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 501,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12021:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 501,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12783:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 501,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15794:5:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 510,
                        "nodeType": "InlineAssembly",
                        "src": "11789:4683:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "10966:593:6",
                    "text": " @dev Internal function to transfer an ERC721 token from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer. Note that this function does\n      not check whether the receiver can accept the ERC721 token (i.e. it\n      does not use `safeTransferFrom`).\n @param token      The ERC721 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param identifier The tokenId to transfer."
                  },
                  "id": 512,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC721Transfer",
                  "nameLocation": "11573:22:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "11613:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "11605:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11605:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "11636:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "11628:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11628:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "11658:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "11650:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11650:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "11678:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "11670:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11670:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11595:99:6"
                  },
                  "returnParameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11704:0:6"
                  },
                  "scope": 539,
                  "src": "11564:4914:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 527,
                    "nodeType": "Block",
                    "src": "17291:5455:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "17386:5354:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17479:224:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "17504:24:6"
                                        },
                                        {
                                          "name": "NoContract_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "17530:26:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17497:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17497:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17497:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "17581:26:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "17609:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17574:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17574:41:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17574:41:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "17639:24:6"
                                        },
                                        {
                                          "name": "NoContract_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "17665:23:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "17632:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17632:57:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17632:57:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulIdentifier",
                                        "src": "17471:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extcodesize",
                                      "nodeType": "YulIdentifier",
                                      "src": "17459:11:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17459:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "17452:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17452:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "17449:254:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17871:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "17895:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17889:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17889:28:6"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "17875:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17930:31:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "17952:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17946:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17946:15:6"
                              },
                              "variables": [
                                {
                                  "name": "slot0x80",
                                  "nodeType": "YulTypedName",
                                  "src": "17934:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17974:31:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17996:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17990:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17990:15:6"
                              },
                              "variables": [
                                {
                                  "name": "slot0xA0",
                                  "nodeType": "YulTypedName",
                                  "src": "17978:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18018:31:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18040:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "18034:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18034:15:6"
                              },
                              "variables": [
                                {
                                  "name": "slot0xC0",
                                  "nodeType": "YulTypedName",
                                  "src": "18022:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18165:32:6"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "18215:34:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18141:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18141:122:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18141:122:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18283:33:6"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "18318:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18276:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18276:47:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18276:47:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18343:31:6"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "18376:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18336:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18336:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18336:43:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_id_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18399:31:6"
                                  },
                                  {
                                    "name": "identifier",
                                    "nodeType": "YulIdentifier",
                                    "src": "18432:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18392:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18392:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18392:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_amount_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18463:35:6"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "18500:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18456:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18456:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18456:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_offset_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18544:40:6"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_length_offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "18602:43:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18520:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18520:139:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18520:139:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_length_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18679:40:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18721:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18672:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18672:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18672:51:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18792:235:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "18829:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18829:5:6"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "18852:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18875:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18894:32:6"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18944:31:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18993:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19012:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "18807:4:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18807:220:6"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "18796:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19101:3254:6",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "19260:2308:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "19571:143:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19627:14:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "19627:16:6"
                                                  },
                                                  {
                                                    "name": "AlmostOneWord",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19645:13:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19623:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19623:36:6"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "19685:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "19594:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "19594:120:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "returnDataWords",
                                              "nodeType": "YulTypedName",
                                              "src": "19575:15:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "19962:42:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "memPointer",
                                                "nodeType": "YulIdentifier",
                                                "src": "19984:10:6"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "19996:7:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "19980:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "19980:24:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "msizeWords",
                                              "nodeType": "YulTypedName",
                                              "src": "19966:10:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "20095:45:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "CostPerWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "20111:11:6"
                                              },
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "20124:15:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "20107:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20107:33:6"
                                          },
                                          "variables": [
                                            {
                                              "name": "cost",
                                              "nodeType": "YulTypedName",
                                              "src": "20099:4:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "20265:734:6",
                                            "statements": [
                                              {
                                                "nodeType": "YulAssignment",
                                                "src": "20291:686:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "cost",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "20332:4:6"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "20448:15:6"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "20465:10:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "20444:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "20444:32:6"
                                                            },
                                                            {
                                                              "name": "CostPerWord",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "20514:11:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "mul",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "20403:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "20403:156:6"
                                                        },
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "20683:15:6"
                                                                    },
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "20700:15:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "20679:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "20679:37:6"
                                                                },
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "20762:10:6"
                                                                    },
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "20774:10:6"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "20758:3:6"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "20758:27:6"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "20634:3:6"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "20634:189:6"
                                                            },
                                                            {
                                                              "name": "MemoryExpansionCoefficient",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "20861:26:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "div",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "20593:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "20593:328:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "20366:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "20366:585:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "20299:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "20299:678:6"
                                                },
                                                "variableNames": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "20291:4:6"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "20236:15:6"
                                              },
                                              {
                                                "name": "msizeWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "20253:10:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "20233:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20233:31:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "20230:769:6"
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "21250:300:6",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "21372:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "21375:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "21378:14:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "21378:16:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "returndatacopy",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "21357:14:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "21357:38:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "21357:38:6"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "21508:1:6",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "21511:14:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "21511:16:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "21501:6:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "21501:27:6"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "21501:27:6"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "21220:4:6"
                                                  },
                                                  {
                                                    "name": "ExtraGasBuffer",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "21226:14:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21216:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "21216:25:6"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "gas",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21243:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "21243:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "lt",
                                              "nodeType": "YulIdentifier",
                                              "src": "21213:2:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "21213:36:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "21210:340:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "returndatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "19243:14:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19243:16:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "19240:2328:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "21680:41:6"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "21743:43:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21652:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21652:152:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21652:152:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "21828:43:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "21873:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21821:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21821:58:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21821:58:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_from_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "21903:42:6"
                                        },
                                        {
                                          "name": "from",
                                          "nodeType": "YulIdentifier",
                                          "src": "21947:4:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21896:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21896:56:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21896:56:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_to_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "21976:40:6"
                                        },
                                        {
                                          "name": "to",
                                          "nodeType": "YulIdentifier",
                                          "src": "22018:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21969:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21969:52:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21969:52:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_id_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "22045:40:6"
                                        },
                                        {
                                          "name": "identifier",
                                          "nodeType": "YulIdentifier",
                                          "src": "22087:10:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "22038:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22038:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22038:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_amount_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "22122:44:6"
                                        },
                                        {
                                          "name": "amount",
                                          "nodeType": "YulIdentifier",
                                          "src": "22168:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "22115:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22115:60:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22115:60:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "22220:41:6"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "22283:40:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "22192:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22192:149:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22192:149:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nodeType": "YulIdentifier",
                                    "src": "19092:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "19085:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19085:15:6"
                              },
                              "nodeType": "YulIf",
                              "src": "19082:3273:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "22376:8:6"
                                  },
                                  {
                                    "name": "slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "22386:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22369:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22369:26:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22369:26:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22437:8:6"
                                  },
                                  {
                                    "name": "slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22447:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22430:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22430:26:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22430:26:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22498:8:6"
                                  },
                                  {
                                    "name": "slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22508:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22491:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22491:26:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22491:26:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "22617:21:6"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "22640:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22610:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22610:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22610:41:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "22718:8:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22728:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22711:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22711:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22711:19:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 544,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19645:13:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20111:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20514:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 609,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18463:35:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 621,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18602:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 615,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18679:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 612,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18544:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 600,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18283:33:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 606,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18399:31:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 618,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18944:31:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 597,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18165:32:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 597,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18894:32:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 594,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18215:34:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 603,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18343:31:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 715,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21226:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17895:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22617:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 721,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20861:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17665:23:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17504:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17639:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17530:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 662,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17581:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19685:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19996:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 565,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17952:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 565,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22376:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 568,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17996:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 568,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22437:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 571,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18040:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 571,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22498:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 687,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22122:44:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 678,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21903:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 684,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22045:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 690,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22283:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21680:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 672,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22220:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 669,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21743:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 681,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21976:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 675,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21828:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 559,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22718:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 523,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18500:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 523,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22168:6:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 517,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18318:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 517,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21947:4:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 521,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18432:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 521,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22087:10:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 519,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18376:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 519,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22018:2:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 515,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17471:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 515,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17609:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 515,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18852:5:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 515,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21873:5:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 526,
                        "nodeType": "InlineAssembly",
                        "src": "17377:5363:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 513,
                    "nodeType": "StructuredDocumentation",
                    "src": "16484:637:6",
                    "text": " @dev Internal function to transfer ERC1155 tokens from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer and contract recipients must\n      implement the ERC1155TokenReceiver interface to indicate that they\n      are willing to accept the transfer.\n @param token      The ERC1155 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param identifier The id to transfer.\n @param amount     The amount to transfer."
                  },
                  "id": 528,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC1155Transfer",
                  "nameLocation": "17135:23:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 515,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "17176:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17168:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17168:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 517,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "17199:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17191:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17191:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "17221:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17213:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17213:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 521,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "17241:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17233:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17233:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "17269:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "17261:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17261:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17158:123:6"
                  },
                  "returnParameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17291:0:6"
                  },
                  "scope": 539,
                  "src": "17126:5620:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 537,
                    "nodeType": "Block",
                    "src": "23811:11369:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "23901:11273:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "23915:32:6",
                              "value": {
                                "name": "batchTransfers.length",
                                "nodeType": "YulIdentifier",
                                "src": "23926:21:6"
                              },
                              "variables": [
                                {
                                  "name": "len",
                                  "nodeType": "YulTypedName",
                                  "src": "23919:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "24187:47:6",
                              "value": {
                                "name": "batchTransfers.offset",
                                "nodeType": "YulIdentifier",
                                "src": "24213:21:6"
                              },
                              "variables": [
                                {
                                  "name": "nextElementHeadPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "24191:18:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "24473:38:6",
                              "value": {
                                "name": "nextElementHeadPtr",
                                "nodeType": "YulIdentifier",
                                "src": "24493:18:6"
                              },
                              "variables": [
                                {
                                  "name": "arrayHeadPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "24477:12:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ConduitBatch1155Transfer_from_offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "24709:36:6"
                                  },
                                  {
                                    "name": "ERC1155_safeBatchTransferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "24763:39:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24685:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24685:131:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24685:131:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "24984:9791:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25221:127:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "arrayHeadPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "25264:12:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "nextElementHeadPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "25311:18:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "25298:12:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25298:32:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "25239:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25239:109:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPtr",
                                        "nodeType": "YulTypedName",
                                        "src": "25225:10:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25419:37:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "25445:10:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "25432:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25432:24:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulTypedName",
                                        "src": "25423:5:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "25557:240:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "25586:24:6"
                                              },
                                              {
                                                "name": "NoContract_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "25612:26:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "25579:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "25579:60:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "25579:60:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "25667:26:6"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "25695:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "25660:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "25660:41:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "25660:41:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "25729:24:6"
                                              },
                                              {
                                                "name": "NoContract_error_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "25755:23:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "25722:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "25722:57:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "25722:57:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "token",
                                              "nodeType": "YulIdentifier",
                                              "src": "25549:5:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "extcodesize",
                                            "nodeType": "YulIdentifier",
                                            "src": "25537:11:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25537:18:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "25530:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25530:26:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "25527:270:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25872:128:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "25927:10:6"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "25939:42:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "25923:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25923:59:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "25889:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25889:111:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "idsLength",
                                        "nodeType": "YulTypedName",
                                        "src": "25876:9:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "26090:167:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "ConduitBatch1155Transfer_amounts_length_baseOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "26144:50:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "idsLength",
                                              "nodeType": "YulIdentifier",
                                              "src": "26220:9:6"
                                            },
                                            {
                                              "name": "OneWord",
                                              "nodeType": "YulIdentifier",
                                              "src": "26231:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "26216:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26216:23:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "26119:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26119:138:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "expectedAmountsOffset",
                                        "nodeType": "YulTypedName",
                                        "src": "26094:21:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "26320:1341:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "idsLength",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26488:9:6"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "elementPtr",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "26544:10:6"
                                                        },
                                                        {
                                                          "name": "expectedAmountsOffset",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "26556:21:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26540:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "26540:38:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "calldataload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26527:12:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "26527:52:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "eq",
                                                "nodeType": "YulIdentifier",
                                                "src": "26456:2:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26456:149:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "name": "elementPtr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "26845:10:6"
                                                            },
                                                            {
                                                              "name": "ConduitBatch1155Transfer_ids_head_offset",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "26897:40:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "add",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "26800:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "26800:175:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "calldataload",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26750:12:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "26750:259:6"
                                                    },
                                                    {
                                                      "name": "ConduitBatch1155Transfer_ids_length_offset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "27043:42:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "eq",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26714:2:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "26714:401:6"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "name": "elementPtr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "27346:10:6"
                                                            },
                                                            {
                                                              "name": "ConduitBatchTransfer_amounts_head_offset",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "27398:40:6"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "add",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "27301:3:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "27301:175:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "calldataload",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "27251:12:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "27251:259:6"
                                                    },
                                                    {
                                                      "name": "expectedAmountsOffset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "27544:21:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "eq",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "27215:2:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "27215:380:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "and",
                                                "nodeType": "YulIdentifier",
                                                "src": "26631:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26631:990:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "26371:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26371:1272:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "26343:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26343:1318:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "invalidEncoding",
                                        "nodeType": "YulTypedName",
                                        "src": "26324:15:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "27768:373:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "27822:36:6"
                                              },
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_selector",
                                                "nodeType": "YulIdentifier",
                                                "src": "27884:41:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "27790:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "27790:157:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "27790:157:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "28000:36:6"
                                              },
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "28062:39:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "27968:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "27968:155:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "27968:155:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "name": "invalidEncoding",
                                      "nodeType": "YulIdentifier",
                                      "src": "27752:15:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "27749:392:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "28223:54:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "nextElementHeadPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "28249:18:6"
                                        },
                                        {
                                          "name": "OneWord",
                                          "nodeType": "YulIdentifier",
                                          "src": "28269:7:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "28245:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28245:32:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "nextElementHeadPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "28223:18:6"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "28408:27:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "28461:10:6"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_from_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "28473:36:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "28457:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "28457:53:6"
                                        },
                                        {
                                          "name": "ConduitBatch1155Transfer_usable_head_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "28532:41:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "28374:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28374:217:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "28374:217:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "28766:64:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "TwoWords",
                                          "nodeType": "YulIdentifier",
                                          "src": "28795:8:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "idsLength",
                                              "nodeType": "YulIdentifier",
                                              "src": "28809:9:6"
                                            },
                                            {
                                              "name": "TwoWords",
                                              "nodeType": "YulIdentifier",
                                              "src": "28820:8:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "28805:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "28805:24:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "28791:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28791:39:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "idsAndAmountsSize",
                                        "nodeType": "YulTypedName",
                                        "src": "28770:17:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_data_head_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "28943:37:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "BatchTransfer1155Params_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "29031:41:6"
                                            },
                                            {
                                              "name": "idsAndAmountsSize",
                                              "nodeType": "YulIdentifier",
                                              "src": "29098:17:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29002:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29002:135:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "28915:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28915:240:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "28915:240:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "BatchTransfer1155Params_data_length_basePtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "29301:43:6"
                                            },
                                            {
                                              "name": "idsAndAmountsSize",
                                              "nodeType": "YulIdentifier",
                                              "src": "29370:17:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29272:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29272:137:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29431:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "29244:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29244:206:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29244:206:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "29547:147:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_calldata_baseSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "29596:41:6"
                                        },
                                        {
                                          "name": "idsAndAmountsSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "29659:17:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "29571:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29571:123:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "transferDataSize",
                                        "nodeType": "YulTypedName",
                                        "src": "29551:16:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_ids_length_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "29825:38:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "29889:10:6"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "29901:42:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29885:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29885:59:6"
                                        },
                                        {
                                          "name": "idsAndAmountsSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "29966:17:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "29791:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29791:210:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29791:210:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "30080:318:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "gas",
                                            "nodeType": "YulIdentifier",
                                            "src": "30121:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "30121:5:6"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "30148:5:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "30175:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "ConduitBatch1155Transfer_from_offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "30198:36:6"
                                        },
                                        {
                                          "name": "transferDataSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "30279:16:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "30356:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "30379:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "call",
                                        "nodeType": "YulIdentifier",
                                        "src": "30095:4:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "30095:303:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "success",
                                        "nodeType": "YulTypedName",
                                        "src": "30084:7:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "30480:4281:6",
                                      "statements": [
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "30651:2976:6",
                                            "statements": [
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "30984:155:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [],
                                                          "functionName": {
                                                            "name": "returndatasize",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "31044:14:6"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "31044:16:6"
                                                        },
                                                        {
                                                          "name": "AlmostOneWord",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31062:13:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "31040:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "31040:36:6"
                                                    },
                                                    {
                                                      "name": "OneWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31106:7:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "div",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31007:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31007:132:6"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "returnDataWords",
                                                    "nodeType": "YulTypedName",
                                                    "src": "30988:15:6",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "31760:48:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "transferDataSize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31782:16:6"
                                                    },
                                                    {
                                                      "name": "OneWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31800:7:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "div",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31778:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31778:30:6"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "msizeWords",
                                                    "nodeType": "YulTypedName",
                                                    "src": "31764:10:6",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "31907:45:6",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "CostPerWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31923:11:6"
                                                    },
                                                    {
                                                      "name": "returnDataWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31936:15:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mul",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31919:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31919:33:6"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulTypedName",
                                                    "src": "31911:4:6",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "32085:944:6",
                                                  "statements": [
                                                    {
                                                      "nodeType": "YulAssignment",
                                                      "src": "32115:888:6",
                                                      "value": {
                                                        "arguments": [
                                                          {
                                                            "name": "cost",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "32160:4:6"
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "name": "returnDataWords",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "32288:15:6"
                                                                      },
                                                                      {
                                                                        "name": "msizeWords",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "32305:10:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "sub",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "32284:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "32284:32:6"
                                                                  },
                                                                  {
                                                                    "name": "CostPerWord",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "32358:11:6"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "mul",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "32239:3:6"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "32239:168:6"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "name": "returnDataWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "32592:15:6"
                                                                          },
                                                                          {
                                                                            "name": "returnDataWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "32657:15:6"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "mul",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "32539:3:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "32539:179:6"
                                                                      },
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "name": "msizeWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "32768:10:6"
                                                                          },
                                                                          {
                                                                            "name": "msizeWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "32780:10:6"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "mul",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "32764:3:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "32764:27:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "sub",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "32490:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "32490:343:6"
                                                                  },
                                                                  {
                                                                    "name": "MemoryExpansionCoefficient",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "32875:26:6"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "div",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "32445:3:6"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "32445:494:6"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "add",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "32198:3:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "32198:775:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "32123:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "32123:880:6"
                                                      },
                                                      "variableNames": [
                                                        {
                                                          "name": "cost",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "32115:4:6"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "name": "returnDataWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "32056:15:6"
                                                    },
                                                    {
                                                      "name": "msizeWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "32073:10:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "gt",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "32053:2:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "32053:31:6"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "32050:979:6"
                                              },
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "33296:309:6",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "33419:1:6",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "33422:1:6",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "arguments": [],
                                                            "functionName": {
                                                              "name": "returndatasize",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "33425:14:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "33425:16:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "returndatacopy",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "33404:14:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "33404:38:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "33404:38:6"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "33559:1:6",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "arguments": [],
                                                            "functionName": {
                                                              "name": "returndatasize",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "33562:14:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "33562:16:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "revert",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "33552:6:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "33552:27:6"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "33552:27:6"
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "cost",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "33266:4:6"
                                                        },
                                                        {
                                                          "name": "ExtraGasBuffer",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "33272:14:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "33262:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "33262:25:6"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "gas",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "33289:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "33289:5:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "lt",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "33259:2:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "33259:36:6"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "33256:349:6"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "returndatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "30634:14:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "30634:16:6"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "30631:2996:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "33729:1:6",
                                                "type": "",
                                                "value": "0"
                                              },
                                              {
                                                "name": "ERC1155BatchTransferGenericFailure_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "33756:50:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "33697:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "33697:131:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "33697:131:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "ERC1155BatchTransferGenericFailure_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "33897:44:6"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "33943:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "33890:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "33890:59:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "33890:59:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "BatchTransfer1155Params_ids_head_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "34060:36:6"
                                              },
                                              {
                                                "name": "ERC1155BatchTransferGenericFailure_ids_offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "34122:45:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "34028:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "34028:161:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "34028:161:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "BatchTransfer1155Params_amounts_head_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "34304:40:6"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "OneWord",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "34403:7:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "BatchTransfer1155Params_amounts_head_ptr",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "34446:40:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "34440:5:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "34440:47:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "34370:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "34370:143:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "34272:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "34272:263:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "34272:263:6"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "34723:1:6",
                                                "type": "",
                                                "value": "0"
                                              },
                                              {
                                                "name": "transferDataSize",
                                                "nodeType": "YulIdentifier",
                                                "src": "34726:16:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "34716:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "34716:27:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "34716:27:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "success",
                                          "nodeType": "YulIdentifier",
                                          "src": "30471:7:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "30464:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "30464:15:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "30461:4300:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "24929:1:6"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "24932:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "24926:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24926:10:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "24937:46:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "24955:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "24964:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "24967:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "24960:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24960:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "24955:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "24883:42:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "24901:10:6",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "24910:1:6",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "24905:1:6",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "24879:9896:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "35116:21:6"
                                  },
                                  {
                                    "name": "DefaultFreeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "35139:24:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35109:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35109:55:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35109:55:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 544,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31062:13:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 730,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34304:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 730,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34446:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 739,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29596:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 733,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28943:37:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 736,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29301:43:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 727,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34060:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 745,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29031:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 742,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29825:38:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 724,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28408:27:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 769,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "26144:50:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 757,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24709:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 757,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28473:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 757,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "30198:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 760,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "26897:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 766,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25939:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 766,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27043:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 766,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29901:42:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 754,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28532:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 775,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27398:40:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31923:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32358:11:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 562,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "35139:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 789,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "33756:50:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 795,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34122:45:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 792,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "33897:44:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 625,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24763:39:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 715,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "33272:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "35116:21:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 781,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28062:39:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 778,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27822:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 778,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28000:36:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 785,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27884:41:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 721,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32875:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 665,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25755:23:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25586:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25729:24:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25612:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 662,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25667:26:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "26231:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28269:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31106:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31800:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 547,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "34403:7:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 550,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28795:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 550,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28820:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 533,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "23926:21:6",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 533,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "24213:21:6",
                            "suffix": "offset",
                            "valueSize": 1
                          }
                        ],
                        "id": 536,
                        "nodeType": "InlineAssembly",
                        "src": "23892:11282:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 529,
                    "nodeType": "StructuredDocumentation",
                    "src": "22752:940:6",
                    "text": " @dev Internal function to transfer ERC1155 tokens from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer and contract recipients must\n      implement the ERC1155TokenReceiver interface to indicate that they\n      are willing to accept the transfer. NOTE: this function is not\n      memory-safe; it will overwrite existing memory, restore the free\n      memory pointer to the default value, and overwrite the zero slot.\n      This function should only be called once memory is no longer\n      required and when uninitialized arrays are not utilized, and memory\n      should be considered fully corrupted (aside from the existence of a\n      default-value free memory pointer) after calling this function.\n @param batchTransfers The group of 1155 batch transfers to perform."
                  },
                  "id": 538,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC1155BatchTransfers",
                  "nameLocation": "23706:29:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 533,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "23781:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "23745:50:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 531,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 530,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 340,
                              "src": "23745:24:6"
                            },
                            "referencedDeclaration": 340,
                            "src": "23745:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$340_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 532,
                          "nodeType": "ArrayTypeName",
                          "src": "23745:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$340_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23735:66:6"
                  },
                  "returnParameters": {
                    "id": 535,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23811:0:6"
                  },
                  "scope": 539,
                  "src": "23697:11483:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 540,
              "src": "849:34333:6",
              "usedErrors": [
                420,
                423,
                426,
                439,
                454,
                465,
                470,
                473
              ]
            }
          ],
          "src": "32:35151:6"
        },
        "id": 6
      },
      "contracts/lib/TokenTransferrerConstants.sol": {
        "ast": {
          "absolutePath": "contracts/lib/TokenTransferrerConstants.sol",
          "exportedSymbols": {
            "AlmostOneWord": [
              544
            ],
            "BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
              709
            ],
            "BadReturnValueFromERC20OnTransfer_error_from_ptr": [
              703
            ],
            "BadReturnValueFromERC20OnTransfer_error_length": [
              712
            ],
            "BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
              697
            ],
            "BadReturnValueFromERC20OnTransfer_error_signature": [
              694
            ],
            "BadReturnValueFromERC20OnTransfer_error_to_ptr": [
              706
            ],
            "BadReturnValueFromERC20OnTransfer_error_token_ptr": [
              700
            ],
            "BatchTransfer1155Params_amounts_head_ptr": [
              730
            ],
            "BatchTransfer1155Params_amounts_length_baseOffset": [
              748
            ],
            "BatchTransfer1155Params_calldata_baseSize": [
              739
            ],
            "BatchTransfer1155Params_data_head_ptr": [
              733
            ],
            "BatchTransfer1155Params_data_length_baseOffset": [
              751
            ],
            "BatchTransfer1155Params_data_length_basePtr": [
              736
            ],
            "BatchTransfer1155Params_ids_head_ptr": [
              727
            ],
            "BatchTransfer1155Params_ids_length_offset": [
              745
            ],
            "BatchTransfer1155Params_ids_length_ptr": [
              742
            ],
            "BatchTransfer1155Params_ptr": [
              724
            ],
            "ConduitBatch1155Transfer_amounts_head_offset": [
              763
            ],
            "ConduitBatch1155Transfer_amounts_length_baseOffset": [
              769
            ],
            "ConduitBatch1155Transfer_calldata_baseSize": [
              772
            ],
            "ConduitBatch1155Transfer_from_offset": [
              757
            ],
            "ConduitBatch1155Transfer_ids_head_offset": [
              760
            ],
            "ConduitBatch1155Transfer_ids_length_offset": [
              766
            ],
            "ConduitBatch1155Transfer_usable_head_size": [
              754
            ],
            "ConduitBatchTransfer_amounts_head_offset": [
              775
            ],
            "CostPerWord": [
              718
            ],
            "DefaultFreeMemoryPointer": [
              562
            ],
            "ERC1155BatchTransferGenericFailure_error_signature": [
              789
            ],
            "ERC1155BatchTransferGenericFailure_ids_offset": [
              795
            ],
            "ERC1155BatchTransferGenericFailure_token_ptr": [
              792
            ],
            "ERC1155_safeBatchTransferFrom_selector": [
              634
            ],
            "ERC1155_safeBatchTransferFrom_signature": [
              625
            ],
            "ERC1155_safeTransferFrom_amount_ptr": [
              609
            ],
            "ERC1155_safeTransferFrom_data_length_offset": [
              621
            ],
            "ERC1155_safeTransferFrom_data_length_ptr": [
              615
            ],
            "ERC1155_safeTransferFrom_data_offset_ptr": [
              612
            ],
            "ERC1155_safeTransferFrom_from_ptr": [
              600
            ],
            "ERC1155_safeTransferFrom_id_ptr": [
              606
            ],
            "ERC1155_safeTransferFrom_length": [
              618
            ],
            "ERC1155_safeTransferFrom_sig_ptr": [
              597
            ],
            "ERC1155_safeTransferFrom_signature": [
              594
            ],
            "ERC1155_safeTransferFrom_to_ptr": [
              603
            ],
            "ERC20_transferFrom_amount_ptr": [
              587
            ],
            "ERC20_transferFrom_from_ptr": [
              581
            ],
            "ERC20_transferFrom_length": [
              590
            ],
            "ERC20_transferFrom_sig_ptr": [
              578
            ],
            "ERC20_transferFrom_signature": [
              575
            ],
            "ERC20_transferFrom_to_ptr": [
              584
            ],
            "ERC721_transferFrom_from_ptr": [
              643
            ],
            "ERC721_transferFrom_id_ptr": [
              649
            ],
            "ERC721_transferFrom_length": [
              652
            ],
            "ERC721_transferFrom_sig_ptr": [
              640
            ],
            "ERC721_transferFrom_signature": [
              637
            ],
            "ERC721_transferFrom_to_ptr": [
              646
            ],
            "ExtraGasBuffer": [
              715
            ],
            "FreeMemoryPointerSlot": [
              556
            ],
            "Invalid1155BatchTransferEncoding_length": [
              781
            ],
            "Invalid1155BatchTransferEncoding_ptr": [
              778
            ],
            "Invalid1155BatchTransferEncoding_selector": [
              785
            ],
            "MemoryExpansionCoefficient": [
              721
            ],
            "NoContract_error_length": [
              665
            ],
            "NoContract_error_sig_ptr": [
              659
            ],
            "NoContract_error_signature": [
              656
            ],
            "NoContract_error_token_ptr": [
              662
            ],
            "OneWord": [
              547
            ],
            "Slot0x80": [
              565
            ],
            "Slot0xA0": [
              568
            ],
            "Slot0xC0": [
              571
            ],
            "ThreeWords": [
              553
            ],
            "TokenTransferGenericFailure_error_amount_ptr": [
              687
            ],
            "TokenTransferGenericFailure_error_from_ptr": [
              678
            ],
            "TokenTransferGenericFailure_error_id_ptr": [
              684
            ],
            "TokenTransferGenericFailure_error_length": [
              690
            ],
            "TokenTransferGenericFailure_error_sig_ptr": [
              672
            ],
            "TokenTransferGenericFailure_error_signature": [
              669
            ],
            "TokenTransferGenericFailure_error_to_ptr": [
              681
            ],
            "TokenTransferGenericFailure_error_token_ptr": [
              675
            ],
            "TwoWords": [
              550
            ],
            "ZeroSlot": [
              559
            ]
          },
          "id": 796,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 541,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:7"
            },
            {
              "constant": true,
              "id": 544,
              "mutability": "constant",
              "name": "AlmostOneWord",
              "nameLocation": "1808:13:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1791:37:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 542,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1791:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783166",
                "id": 543,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1824:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_31_by_1",
                  "typeString": "int_const 31"
                },
                "value": "0x1f"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 547,
              "mutability": "constant",
              "name": "OneWord",
              "nameLocation": "1847:7:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1830:31:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 545,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1830:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 546,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1857:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 550,
              "mutability": "constant",
              "name": "TwoWords",
              "nameLocation": "1880:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1863:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 548,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1863:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783430",
                "id": 549,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1891:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_64_by_1",
                  "typeString": "int_const 64"
                },
                "value": "0x40"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 553,
              "mutability": "constant",
              "name": "ThreeWords",
              "nameLocation": "1914:10:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1897:34:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 551,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1897:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 552,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1927:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 556,
              "mutability": "constant",
              "name": "FreeMemoryPointerSlot",
              "nameLocation": "1951:21:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1934:45:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 554,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1934:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783430",
                "id": 555,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1975:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_64_by_1",
                  "typeString": "int_const 64"
                },
                "value": "0x40"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 559,
              "mutability": "constant",
              "name": "ZeroSlot",
              "nameLocation": "1998:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "1981:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 557,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1981:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 558,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2009:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 562,
              "mutability": "constant",
              "name": "DefaultFreeMemoryPointer",
              "nameLocation": "2032:24:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2015:48:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 560,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2015:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 561,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2059:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 565,
              "mutability": "constant",
              "name": "Slot0x80",
              "nameLocation": "2083:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2066:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 563,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2066:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 564,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2094:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 568,
              "mutability": "constant",
              "name": "Slot0xA0",
              "nameLocation": "2117:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2100:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 566,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2100:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 567,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2128:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 571,
              "mutability": "constant",
              "name": "Slot0xC0",
              "nameLocation": "2151:8:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2134:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 569,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2134:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 570,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2162:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 575,
              "mutability": "constant",
              "name": "ERC20_transferFrom_signature",
              "nameLocation": "2254:28:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2237:122:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 572,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2237:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307832336238373264643030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2291:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
                      "typeString": "int_const 1615...(69 digits omitted)...8224"
                    },
                    "value": "0x23b872dd00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 574,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "2285:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
                  "typeString": "int_const 1615...(69 digits omitted)...8224"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 578,
              "mutability": "constant",
              "name": "ERC20_transferFrom_sig_ptr",
              "nameLocation": "2378:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2361:49:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 576,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2361:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 577,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2407:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 581,
              "mutability": "constant",
              "name": "ERC20_transferFrom_from_ptr",
              "nameLocation": "2429:27:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2412:51:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 579,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2412:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 580,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2459:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 584,
              "mutability": "constant",
              "name": "ERC20_transferFrom_to_ptr",
              "nameLocation": "2482:25:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2465:49:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 582,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2465:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 583,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2510:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 587,
              "mutability": "constant",
              "name": "ERC20_transferFrom_amount_ptr",
              "nameLocation": "2533:29:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2516:53:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 585,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2516:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 586,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2565:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 590,
              "mutability": "constant",
              "name": "ERC20_transferFrom_length",
              "nameLocation": "2588:25:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2571:49:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 588,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2571:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 589,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2616:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 594,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_signature",
              "nameLocation": "2759:34:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2742:128:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 591,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2742:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307866323432343332613030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2802:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1",
                      "typeString": "int_const 1095...(70 digits omitted)...7872"
                    },
                    "value": "0xf242432a00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 593,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "2796:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1",
                  "typeString": "int_const 1095...(70 digits omitted)...7872"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 597,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_sig_ptr",
              "nameLocation": "2889:32:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2872:55:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 595,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2872:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 596,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2924:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 600,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_from_ptr",
              "nameLocation": "2946:33:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2929:57:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 598,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2929:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 599,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2982:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 603,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_to_ptr",
              "nameLocation": "3005:31:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "2988:55:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 601,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2988:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 602,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3039:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 606,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_id_ptr",
              "nameLocation": "3062:31:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3045:55:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 604,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3045:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 605,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3096:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 609,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_amount_ptr",
              "nameLocation": "3119:35:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3102:59:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 607,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3102:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 608,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3157:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 612,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_offset_ptr",
              "nameLocation": "3180:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3163:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 610,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3163:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 611,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3223:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 615,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_length_ptr",
              "nameLocation": "3246:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3229:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 613,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3229:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 614,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3289:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 618,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_length",
              "nameLocation": "3312:31:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3295:55:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 616,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3295:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 617,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3346:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 621,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_length_offset",
              "nameLocation": "3390:43:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3373:67:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 619,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3373:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 620,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3436:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 625,
              "mutability": "constant",
              "name": "ERC1155_safeBatchTransferFrom_signature",
              "nameLocation": "3567:39:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3550:133:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 622,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3550:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307832656232633264363030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3615:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_21122234520580670415450416725259358303340482176740656504059893016123987197952_by_1",
                      "typeString": "int_const 2112...(69 digits omitted)...7952"
                    },
                    "value": "0x2eb2c2d600000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 624,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "3609:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_21122234520580670415450416725259358303340482176740656504059893016123987197952_by_1",
                  "typeString": "int_const 2112...(69 digits omitted)...7952"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 634,
              "mutability": "constant",
              "name": "ERC1155_safeBatchTransferFrom_selector",
              "nameLocation": "3702:38:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3686:119:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              },
              "typeName": {
                "id": 626,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "3686:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "value": {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 631,
                        "name": "ERC1155_safeBatchTransferFrom_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "3763:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3755:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 629,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3755:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3755:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  ],
                  "id": 628,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "3743:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_bytes4_$",
                    "typeString": "type(bytes4)"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:6:7",
                    "typeDescriptions": {}
                  }
                },
                "id": 633,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "3743:62:7",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 637,
              "mutability": "constant",
              "name": "ERC721_transferFrom_signature",
              "nameLocation": "3825:29:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3808:77:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 635,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3808:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "id": 636,
                "name": "ERC20_transferFrom_signature",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 575,
                "src": "3857:28:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 640,
              "mutability": "constant",
              "name": "ERC721_transferFrom_sig_ptr",
              "nameLocation": "3904:27:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3887:50:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 638,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3887:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 639,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3934:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 643,
              "mutability": "constant",
              "name": "ERC721_transferFrom_from_ptr",
              "nameLocation": "3956:28:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3939:52:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 641,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3939:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 642,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3987:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 646,
              "mutability": "constant",
              "name": "ERC721_transferFrom_to_ptr",
              "nameLocation": "4010:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "3993:50:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 644,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3993:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 645,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4039:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 649,
              "mutability": "constant",
              "name": "ERC721_transferFrom_id_ptr",
              "nameLocation": "4062:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4045:50:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 647,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4045:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 648,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4091:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 652,
              "mutability": "constant",
              "name": "ERC721_transferFrom_length",
              "nameLocation": "4114:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4097:50:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 650,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4097:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 651,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4143:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 656,
              "mutability": "constant",
              "name": "NoContract_error_signature",
              "nameLocation": "4238:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4221:120:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 653,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4221:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307835663135643637323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4273:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_43008304450922786202210492095377626797441506865803949691986084171659119427584_by_1",
                      "typeString": "int_const 4300...(69 digits omitted)...7584"
                    },
                    "value": "0x5f15d67200000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 655,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "4267:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_43008304450922786202210492095377626797441506865803949691986084171659119427584_by_1",
                  "typeString": "int_const 4300...(69 digits omitted)...7584"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 659,
              "mutability": "constant",
              "name": "NoContract_error_sig_ptr",
              "nameLocation": "4360:24:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4343:47:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 657,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4343:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 658,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4387:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 662,
              "mutability": "constant",
              "name": "NoContract_error_token_ptr",
              "nameLocation": "4409:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4392:49:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 660,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4392:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 661,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4438:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 665,
              "mutability": "constant",
              "name": "NoContract_error_length",
              "nameLocation": "4460:23:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4443:47:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 663,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4443:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 664,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4486:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 669,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_signature",
              "nameLocation": "4637:43:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4620:137:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 666,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4620:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307866343836626338373030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4689:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_110602393728903298954583666965654358082204038726121260616145960492056870649856_by_1",
                      "typeString": "int_const 1106...(70 digits omitted)...9856"
                    },
                    "value": "0xf486bc8700000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 668,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "4683:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_110602393728903298954583666965654358082204038726121260616145960492056870649856_by_1",
                  "typeString": "int_const 1106...(70 digits omitted)...9856"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 672,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_sig_ptr",
              "nameLocation": "4776:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4759:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 670,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4759:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 671,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4820:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 675,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_token_ptr",
              "nameLocation": "4842:43:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4825:66:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 673,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4825:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 674,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4888:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 678,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_from_ptr",
              "nameLocation": "4910:42:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4893:66:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 676,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4893:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 677,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4955:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 681,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_to_ptr",
              "nameLocation": "4978:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "4961:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 679,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4961:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 680,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5021:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 684,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_id_ptr",
              "nameLocation": "5044:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5027:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 682,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5027:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 683,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5087:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 687,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_amount_ptr",
              "nameLocation": "5110:44:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5093:68:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 685,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5093:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 686,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5157:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 690,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_length",
              "nameLocation": "5202:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5185:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 688,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5185:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 689,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5245:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 694,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_signature",
              "nameLocation": "5378:49:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5361:143:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 691,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5361:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307839383839313932333030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5436:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_68993784519787932800265262788752310095870803544120403744274516456007463337984_by_1",
                      "typeString": "int_const 6899...(69 digits omitted)...7984"
                    },
                    "value": "0x9889192300000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 693,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "5430:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68993784519787932800265262788752310095870803544120403744274516456007463337984_by_1",
                  "typeString": "int_const 6899...(69 digits omitted)...7984"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 697,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
              "nameLocation": "5523:47:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5506:70:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 695,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5506:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 696,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5573:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 700,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
              "nameLocation": "5595:49:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5578:72:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 698,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5578:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 699,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5647:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 703,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
              "nameLocation": "5669:48:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5652:72:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 701,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5652:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 702,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5720:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 706,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
              "nameLocation": "5743:46:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5726:70:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 704,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5726:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 705,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5792:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 709,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
              "nameLocation": "5815:50:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5798:74:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 707,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5798:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 708,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5868:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 712,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_length",
              "nameLocation": "5913:46:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5896:70:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 710,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5896:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 711,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5962:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 715,
              "mutability": "constant",
              "name": "ExtraGasBuffer",
              "nameLocation": "5986:14:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "5969:38:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 713,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5969:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 714,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6003:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 718,
              "mutability": "constant",
              "name": "CostPerWord",
              "nameLocation": "6026:11:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6009:32:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 716,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6009:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "33",
                "id": 717,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6040:1:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 721,
              "mutability": "constant",
              "name": "MemoryExpansionCoefficient",
              "nameLocation": "6060:26:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6043:51:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 719,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6043:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "3078323030",
                "id": 720,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6089:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_512_by_1",
                  "typeString": "int_const 512"
                },
                "value": "0x200"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 724,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ptr",
              "nameLocation": "6220:27:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6203:51:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 722,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6203:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 723,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6250:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 727,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_head_ptr",
              "nameLocation": "6273:36:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6256:60:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 725,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6256:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 726,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6312:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 730,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_amounts_head_ptr",
              "nameLocation": "6335:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6318:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 728,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6318:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 729,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6378:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 733,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_head_ptr",
              "nameLocation": "6401:37:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6384:61:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 731,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6384:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 732,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6441:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 736,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_length_basePtr",
              "nameLocation": "6464:43:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6447:67:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 734,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6447:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 735,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6510:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 739,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_calldata_baseSize",
              "nameLocation": "6533:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6516:65:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 737,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6516:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 738,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6577:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 742,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_length_ptr",
              "nameLocation": "6601:38:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6584:62:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 740,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6584:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 741,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6642:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 745,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_length_offset",
              "nameLocation": "6666:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6649:65:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 743,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6649:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 744,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6710:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 748,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_amounts_length_baseOffset",
              "nameLocation": "6733:49:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6716:73:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 746,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6716:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 747,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6785:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 751,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_length_baseOffset",
              "nameLocation": "6808:46:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6791:70:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 749,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6791:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786530",
                "id": 750,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6857:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_224_by_1",
                  "typeString": "int_const 224"
                },
                "value": "0xe0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 754,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_usable_head_size",
              "nameLocation": "6881:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6864:65:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 752,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6864:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 753,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6925:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 757,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_from_offset",
              "nameLocation": "6949:36:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6932:60:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 755,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6932:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 756,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6988:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 760,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_ids_head_offset",
              "nameLocation": "7011:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "6994:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 758,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6994:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 759,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7054:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 763,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_amounts_head_offset",
              "nameLocation": "7077:44:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7060:68:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 761,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7060:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 762,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7124:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 766,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_ids_length_offset",
              "nameLocation": "7147:42:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7130:66:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 764,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7130:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 765,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7192:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 769,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_amounts_length_baseOffset",
              "nameLocation": "7215:50:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7198:74:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 767,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7198:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 768,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7268:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 772,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_calldata_baseSize",
              "nameLocation": "7291:42:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7274:66:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 770,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7274:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 771,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7336:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 775,
              "mutability": "constant",
              "name": "ConduitBatchTransfer_amounts_head_offset",
              "nameLocation": "7439:40:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7422:64:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 773,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7422:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 774,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7482:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 778,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_ptr",
              "nameLocation": "7506:36:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7489:60:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 776,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7489:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783030",
                "id": 777,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7545:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x00"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 781,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_length",
              "nameLocation": "7568:39:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7551:63:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 779,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7551:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 780,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7610:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 785,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_selector",
              "nameLocation": "7633:41:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7616:135:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 782,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7616:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307865626132303834633030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7683:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_106579805904488420557082595712554375541441034432625840267987479138441579462656_by_1",
                      "typeString": "int_const 1065...(70 digits omitted)...2656"
                    },
                    "value": "0xeba2084c00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 784,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "7677:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_106579805904488420557082595712554375541441034432625840267987479138441579462656_by_1",
                  "typeString": "int_const 1065...(70 digits omitted)...2656"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 789,
              "mutability": "constant",
              "name": "ERC1155BatchTransferGenericFailure_error_signature",
              "nameLocation": "7771:50:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7754:144:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 786,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7754:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307861666334343565323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7830:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_79501532840214056618875980936328268319366216792329069890481479576950077915136_by_1",
                      "typeString": "int_const 7950...(69 digits omitted)...5136"
                    },
                    "value": "0xafc445e200000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 788,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "7824:74:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_79501532840214056618875980936328268319366216792329069890481479576950077915136_by_1",
                  "typeString": "int_const 7950...(69 digits omitted)...5136"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 792,
              "mutability": "constant",
              "name": "ERC1155BatchTransferGenericFailure_token_ptr",
              "nameLocation": "7917:44:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7900:68:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 790,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7900:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 791,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7964:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 795,
              "mutability": "constant",
              "name": "ERC1155BatchTransferGenericFailure_ids_offset",
              "nameLocation": "7987:45:7",
              "nodeType": "VariableDeclaration",
              "scope": 796,
              "src": "7970:69:7",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 793,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7970:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 794,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "8035:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            }
          ],
          "src": "32:8009:7"
        },
        "id": 7
      }
    }
  }
}
